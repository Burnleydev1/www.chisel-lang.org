Index.PACKAGES = {"chiseltest.backends.treadle" : [{"name" : "chiseltest.backends.treadle.OptionsAdapter", "shortDescription" : "This provides a mechanism to map between generic testers2 level annotations andany differences the backend may have in expressing their intent.", "members_class" : [{"label" : "transform", "tail" : "(annos: AnnotationSeq): AnnotationSeq", "member" : "chiseltest.backends.treadle.OptionsAdapter.transform", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#transform(annos:firrtl.AnnotationSeq):firrtl.AnnotationSeq", "kind" : "def"}, {"member" : "chiseltest.backends.treadle.OptionsAdapter#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "firrtl.options.Phase.name", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#name:String", "kind" : "lazy val"}, {"label" : "invalidates", "tail" : "(a: Phase): Boolean", "member" : "firrtl.options.DependencyAPI.invalidates", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#invalidates(a:A):Boolean", "kind" : "def"}, {"label" : "optionalPrerequisiteOf", "tail" : "(): Seq[Dependency[Phase]]", "member" : "firrtl.options.DependencyAPI.optionalPrerequisiteOf", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#optionalPrerequisiteOf:Seq[firrtl.options.Dependency[A]]", "kind" : "def"}, {"label" : "dependents", "tail" : "(): Seq[Dependency[Phase]]", "member" : "firrtl.options.DependencyAPI.dependents", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#dependents:Seq[firrtl.options.Dependency[A]]", "kind" : "def"}, {"label" : "optionalPrerequisites", "tail" : "(): Seq[Dependency[Phase]]", "member" : "firrtl.options.DependencyAPI.optionalPrerequisites", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#optionalPrerequisites:Seq[firrtl.options.Dependency[A]]", "kind" : "def"}, {"label" : "prerequisites", "tail" : "(): Seq[Dependency[Phase]]", "member" : "firrtl.options.DependencyAPI.prerequisites", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#prerequisites:Seq[firrtl.options.Dependency[A]]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "logger.LazyLogging.logger", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#logger:logger.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/backends\/treadle\/OptionsAdapter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/backends\/treadle\/OptionsAdapter.html", "kind" : "class"}, {"name" : "chiseltest.backends.treadle.TreadleBackend", "shortDescription" : "", "members_class" : [{"label" : "schedulerState", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.schedulerState", "link" : "chiseltest\/internal\/ThreadedBackend.html#schedulerState", "kind" : "object"}, {"label" : "TesterThread", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TesterThread", "link" : "chiseltest\/internal\/ThreadedBackend.html#TesterThreadextendsAbstractTesterThread", "kind" : "class"}, {"label" : "PeekRecord", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.PeekRecord", "link" : "chiseltest\/internal\/ThreadedBackend.html#PeekRecordextendsProductwithSerializable", "kind" : "case class"}, {"label" : "TimescopeUtils", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TimescopeUtils", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimescopeUtils", "kind" : "object"}, {"label" : "Timescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.Timescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasOverridingPokeswithThreadedBackend.this.HasParent", "kind" : "class"}, {"label" : "PokeRecord", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.PokeRecord", "link" : "chiseltest\/internal\/ThreadedBackend.html#PokeRecordextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ThreadRootTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.ThreadRootTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#ThreadRootTimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasParentwithProductwithSerializable", "kind" : "case class"}, {"label" : "RootTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.RootTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#RootTimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasOverridingPokes", "kind" : "class"}, {"label" : "HasParent", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.HasParent", "link" : "chiseltest\/internal\/ThreadedBackend.html#HasParentextendsThreadedBackend.this.BaseTimescope", "kind" : "sealed trait"}, {"label" : "HasOverridingPokes", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.HasOverridingPokes", "link" : "chiseltest\/internal\/ThreadedBackend.html#HasOverridingPokesextendsThreadedBackend.this.BaseTimescope", "kind" : "sealed trait"}, {"label" : "BaseTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.BaseTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#BaseTimescopeextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "TimeRegion", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TimeRegion", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimeRegionextendsProductwithSerializable", "kind" : "case class"}, {"label" : "run", "tail" : "(testFn: (T) ⇒ Unit): Unit", "member" : "chiseltest.backends.treadle.TreadleBackend.run", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#run(testFn:T=>Unit):Unit", "kind" : "def"}, {"label" : "step", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.backends.treadle.TreadleBackend.step", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#step(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "def"}, {"label" : "doTimescope", "tail" : "(contents: () ⇒ Unit): Unit", "member" : "chiseltest.backends.treadle.TreadleBackend.doTimescope", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#doTimescope(contents:()=>Unit):Unit", "kind" : "def"}, {"label" : "lastClockValue", "tail" : ": HashMap[Clock, Boolean]", "member" : "chiseltest.backends.treadle.TreadleBackend.lastClockValue", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#lastClockValue:scala.collection.mutable.HashMap[chisel3.Clock,Boolean]", "kind" : "val"}, {"label" : "getClock", "tail" : "(clk: Clock): Boolean", "member" : "chiseltest.backends.treadle.TreadleBackend.getClock", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#getClock(clk:chisel3.Clock):Boolean", "kind" : "def"}, {"label" : "getClockCycle", "tail" : "(clk: Clock): Int", "member" : "chiseltest.backends.treadle.TreadleBackend.getClockCycle", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#getClockCycle(clk:chisel3.Clock):Int", "kind" : "def"}, {"label" : "clockCounter", "tail" : ": HashMap[Clock, Int]", "member" : "chiseltest.backends.treadle.TreadleBackend.clockCounter", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#clockCounter:scala.collection.mutable.HashMap[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "expectBits", "tail" : "(signal: Data, value: BigInt, message: Option[String], decode: Option[(BigInt) ⇒ String], stale: Boolean): Unit", "member" : "chiseltest.backends.treadle.TreadleBackend.expectBits", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#expectBits(signal:chisel3.Data,value:BigInt,message:Option[String],decode:Option[BigInt=>String],stale:Boolean):Unit", "kind" : "def"}, {"label" : "peekBits", "tail" : "(signal: Data, stale: Boolean): BigInt", "member" : "chiseltest.backends.treadle.TreadleBackend.peekBits", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#peekBits(signal:chisel3.Data,stale:Boolean):BigInt", "kind" : "def"}, {"label" : "pokeBits", "tail" : "(signal: Data, value: BigInt): Unit", "member" : "chiseltest.backends.treadle.TreadleBackend.pokeBits", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#pokeBits(signal:chisel3.Data,value:BigInt):Unit", "kind" : "def"}, {"label" : "peekClock", "tail" : "(signal: Clock): Boolean", "member" : "chiseltest.backends.treadle.TreadleBackend.peekClock", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#peekClock(signal:chisel3.Clock):Boolean", "kind" : "def"}, {"label" : "pokeClock", "tail" : "(signal: Clock, value: Boolean): Unit", "member" : "chiseltest.backends.treadle.TreadleBackend.pokeClock", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#pokeClock(signal:chisel3.Clock,value:Boolean):Unit", "kind" : "def"}, {"label" : "getModule", "tail" : "(): T", "member" : "chiseltest.backends.treadle.TreadleBackend.getModule", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#getModule:T", "kind" : "def"}, {"label" : "getSinkClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.backends.treadle.TreadleBackend.getSinkClocks", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#getSinkClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "def"}, {"label" : "getSourceClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.backends.treadle.TreadleBackend.getSourceClocks", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#getSourceClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "def"}, {"label" : "resolveName", "tail" : "(signal: Data): String", "member" : "chiseltest.backends.treadle.TreadleBackend.resolveName", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#resolveName(signal:chisel3.Data):String", "kind" : "def"}, {"label" : "debugLog", "tail" : "(str: ⇒ String): Unit", "member" : "chiseltest.backends.treadle.TreadleBackend.debugLog", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#debugLog(str:=>String):Unit", "kind" : "def"}, {"label" : "verbose", "tail" : ": Boolean", "member" : "chiseltest.backends.treadle.TreadleBackend.verbose", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#verbose:Boolean", "kind" : "val"}, {"member" : "chiseltest.backends.treadle.TreadleBackend#<init>", "error" : "unsupported entity"}, {"label" : "combinationalPaths", "tail" : ": Map[Data, Set[Data]]", "member" : "chiseltest.backends.treadle.TreadleBackend.combinationalPaths", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#combinationalPaths:Map[chisel3.Data,Set[chisel3.Data]]", "kind" : "val"}, {"label" : "dataNames", "tail" : ": Map[Data, String]", "member" : "chiseltest.backends.treadle.TreadleBackend.dataNames", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#dataNames:Map[chisel3.Data,String]", "kind" : "val"}, {"label" : "dut", "tail" : ": T", "member" : "chiseltest.backends.treadle.TreadleBackend.dut", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#dut:T", "kind" : "val"}, {"label" : "getParentTraceElements", "tail" : "(): Seq[StackTraceElement]", "member" : "chiseltest.internal.ThreadedBackend.getParentTraceElements", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#getParentTraceElements:Seq[StackTraceElement]", "kind" : "def"}, {"label" : "doJoin", "tail" : "(threads: Seq[AbstractTesterThread], stepAfter: Option[Clock]): Unit", "member" : "chiseltest.internal.ThreadedBackend.doJoin", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#doJoin(threads:Seq[chiseltest.internal.AbstractTesterThread],stepAfter:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "doFork", "tail" : "(runnable: () ⇒ Unit, name: Option[String], region: Option[Region]): TesterThread", "member" : "chiseltest.internal.ThreadedBackend.doFork", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#doFork(runnable:()=>Unit,name:Option[String],region:Option[chiseltest.Region]):ThreadedBackend.this.TesterThread", "kind" : "def"}, {"label" : "threadFinished", "tail" : "(thread: TesterThread): Unit", "member" : "chiseltest.internal.ThreadedBackend.threadFinished", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#threadFinished(thread:ThreadedBackend.this.TesterThread):Unit", "kind" : "def"}, {"label" : "scheduler", "tail" : "(): Unit", "member" : "chiseltest.internal.ThreadedBackend.scheduler", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#scheduler():Unit", "kind" : "def"}, {"label" : "runThreads", "tail" : "(clocks: Set[Clock]): Unit", "member" : "chiseltest.internal.ThreadedBackend.runThreads", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#runThreads(clocks:Set[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "driverSemaphore", "tail" : ": Semaphore", "member" : "chiseltest.internal.ThreadedBackend.driverSemaphore", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#driverSemaphore:java.util.concurrent.Semaphore", "kind" : "val"}, {"label" : "currentThread", "tail" : ": Option[TesterThread]", "member" : "chiseltest.internal.ThreadedBackend.currentThread", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#currentThread:Option[ThreadedBackend.this.TesterThread]", "kind" : "val"}, {"label" : "interruptedException", "tail" : ": ConcurrentLinkedQueue[Throwable]", "member" : "chiseltest.internal.ThreadedBackend.interruptedException", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#interruptedException:java.util.concurrent.ConcurrentLinkedQueue[Throwable]", "kind" : "val"}, {"label" : "timestep", "tail" : "(): Unit", "member" : "chiseltest.internal.ThreadedBackend.timestep", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#timestep():Unit", "kind" : "def"}, {"label" : "closeTimescope", "tail" : "(timescope: Timescope): Map[Data, Option[BigInt]]", "member" : "chiseltest.internal.ThreadedBackend.closeTimescope", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#closeTimescope(timescope:ThreadedBackend.this.Timescope):Map[chisel3.Data,Option[BigInt]]", "kind" : "def"}, {"label" : "newTimescope", "tail" : "(): Timescope", "member" : "chiseltest.internal.ThreadedBackend.newTimescope", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#newTimescope():ThreadedBackend.this.Timescope", "kind" : "def"}, {"label" : "doPeek", "tail" : "(signal: Data, trace: Throwable): Unit", "member" : "chiseltest.internal.ThreadedBackend.doPeek", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#doPeek(signal:chisel3.Data,trace:Throwable):Unit", "kind" : "def"}, {"label" : "doPoke", "tail" : "(signal: Data, value: BigInt, trace: Throwable): Unit", "member" : "chiseltest.internal.ThreadedBackend.doPoke", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#doPoke(signal:chisel3.Data,value:BigInt,trace:Throwable):Unit", "kind" : "def"}, {"label" : "rootTimescope", "tail" : ": Option[RootTimescope]", "member" : "chiseltest.internal.ThreadedBackend.rootTimescope", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#rootTimescope:Option[ThreadedBackend.this.RootTimescope]", "kind" : "val"}, {"label" : "currentTime", "tail" : "(): TimeRegion", "member" : "chiseltest.internal.ThreadedBackend.currentTime", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#currentTime:ThreadedBackend.this.TimeRegion", "kind" : "def"}, {"label" : "currentTimestep", "tail" : ": Int", "member" : "chiseltest.internal.ThreadedBackend.currentTimestep", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#currentTimestep:Int", "kind" : "val"}, {"label" : "setTimeout", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.internal.ThreadedBackend.setTimeout", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#setTimeout(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "def"}, {"label" : "idleLimits", "tail" : ": Map[Clock, Int]", "member" : "chiseltest.internal.ThreadedBackend.idleLimits", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#idleLimits:scala.collection.mutable.Map[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "idleCycles", "tail" : ": Map[Clock, Int]", "member" : "chiseltest.internal.ThreadedBackend.idleCycles", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#idleCycles:scala.collection.mutable.Map[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "getVar", "tail" : "(key: Any): Option[Any]", "member" : "chiseltest.internal.BackendInterface.getVar", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#getVar(key:Any):Option[Any]", "kind" : "def"}, {"label" : "setVar", "tail" : "(key: Any, value: Any): Unit", "member" : "chiseltest.internal.BackendInterface.setVar", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#setVar(key:Any,value:Any):Unit", "kind" : "def"}, {"label" : "testMap", "tail" : ": HashMap[Any, Any]", "member" : "chiseltest.internal.BackendInterface.testMap", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#testMap:scala.collection.mutable.HashMap[Any,Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/backends\/treadle\/TreadleBackend.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/backends\/treadle\/TreadleBackend.html", "kind" : "class"}, {"name" : "chiseltest.backends.treadle.TreadleExecutive", "shortDescription" : "", "object" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html", "members_object" : [{"label" : "start", "tail" : "(dutGen: () ⇒ T, testersAnnotationSeq: AnnotationSeq): BackendInstance[T]", "member" : "chiseltest.backends.treadle.TreadleExecutive.start", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#start[T<:chisel3.MultiIOModule](dutGen:()=>T,testersAnnotationSeq:firrtl.AnnotationSeq):chiseltest.internal.BackendInstance[T]", "kind" : "def"}, {"label" : "componentToName", "tail" : "(component: ReferenceTarget): String", "member" : "chiseltest.backends.treadle.TreadleExecutive.componentToName", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#componentToName(component:firrtl.annotations.ReferenceTarget):String", "kind" : "def"}, {"label" : "combinationalPathsToData", "tail" : "(dut: BaseModule, paths: Seq[CombinationalPath], dataNames: Map[Data, String], componentToName: (ReferenceTarget) ⇒ String): Map[Data, Set[Data]]", "member" : "chiseltest.backends.BackendExecutive.combinationalPathsToData", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#combinationalPathsToData(dut:chisel3.experimental.BaseModule,paths:Seq[firrtl.transforms.CombinationalPath],dataNames:Map[chisel3.Data,String],componentToName:firrtl.annotations.ReferenceTarget=>String):Map[chisel3.Data,Set[chisel3.Data]]", "kind" : "def"}, {"label" : "getDataNames", "tail" : "(name: String, data: Data): Seq[(Data, String)]", "member" : "chiseltest.backends.BackendExecutive.getDataNames", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#getDataNames(name:String,data:chisel3.Data):Seq[(chisel3.Data,String)]", "kind" : "def"}, {"label" : "getTopModule", "tail" : "(circuit: Circuit): BaseModule", "member" : "chiseltest.backends.BackendExecutive.getTopModule", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#getTopModule(circuit:chisel3.internal.firrtl.Circuit):chisel3.experimental.BaseModule", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/backends\/treadle\/TreadleExecutive$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "chiseltest.experimental.TestOptionBuilder" : [{"name" : "chiseltest.experimental.TestOptionBuilder.ChiselScalatestOptionBuilder", "shortDescription" : "", "members_class" : [{"label" : "withTesterOptions", "tail" : "(opt: TesterOptions): TestBuilder[T]", "member" : "chiseltest.experimental.TestOptionBuilder.ChiselScalatestOptionBuilder.withTesterOptions", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#withTesterOptions(opt:chiseltest.experimental.TesterOptions):chiseltest.ChiselScalatestTester#TestBuilder[T]", "kind" : "def"}, {"label" : "withExecOptions", "tail" : "(manager: ExecutionOptionsManager with HasTreadleSuite): TestBuilder[T]", "member" : "chiseltest.experimental.TestOptionBuilder.ChiselScalatestOptionBuilder.withExecOptions", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#withExecOptions(manager:firrtl.ExecutionOptionsManagerwithtreadle.HasTreadleSuite):chiseltest.ChiselScalatestTester#TestBuilder[T]", "kind" : "def"}, {"label" : "withFlags", "tail" : "(flags: Array[String]): TestBuilder[T]", "member" : "chiseltest.experimental.TestOptionBuilder.ChiselScalatestOptionBuilder.withFlags", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#withFlags(flags:Array[String]):chiseltest.ChiselScalatestTester#TestBuilder[T]", "kind" : "def"}, {"label" : "withAnnotations", "tail" : "(annotationSeq: AnnotationSeq): TestBuilder[T]", "member" : "chiseltest.experimental.TestOptionBuilder.ChiselScalatestOptionBuilder.withAnnotations", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#withAnnotations(annotationSeq:firrtl.AnnotationSeq):chiseltest.ChiselScalatestTester#TestBuilder[T]", "kind" : "def"}, {"member" : "chiseltest.experimental.TestOptionBuilder.ChiselScalatestOptionBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/experimental\/TestOptionBuilder\/package$$ChiselScalatestOptionBuilder.html", "kind" : "class"}], "chiseltest.experimental.UncheckedClockPoke" : [{"name" : "chiseltest.experimental.UncheckedClockPoke.UncheckedPokeableClock", "shortDescription" : "This provides a quick and dirty way to poke clocks.", "members_class" : [{"label" : "low", "tail" : "(): Unit", "member" : "chiseltest.experimental.UncheckedClockPoke.UncheckedPokeableClock.low", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#low():Unit", "kind" : "def"}, {"label" : "high", "tail" : "(): Unit", "member" : "chiseltest.experimental.UncheckedClockPoke.UncheckedPokeableClock.high", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#high():Unit", "kind" : "def"}, {"member" : "chiseltest.experimental.UncheckedClockPoke.UncheckedPokeableClock#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/experimental\/UncheckedClockPoke\/package$$UncheckedPokeableClock.html", "kind" : "class"}], "chisel3.tester.TestAdapters" : [{"name" : "chisel3.tester.TestAdapters.ReadyValidSink", "shortDescription" : "", "members_class" : [{"label" : "expectInvalid", "tail" : "(): Unit", "member" : "chisel3.tester.TestAdapters.ReadyValidSink.expectInvalid", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#expectInvalid():Unit", "kind" : "def"}, {"label" : "expectPeek", "tail" : "(data: T): Unit", "member" : "chisel3.tester.TestAdapters.ReadyValidSink.expectPeek", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#expectPeek(data:T):Unit", "kind" : "def"}, {"label" : "expectDequeueNow", "tail" : "(data: T): Unit", "member" : "chisel3.tester.TestAdapters.ReadyValidSink.expectDequeueNow", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#expectDequeueNow(data:T):Unit", "kind" : "def"}, {"label" : "expectDequeue", "tail" : "(data: T): Unit", "member" : "chisel3.tester.TestAdapters.ReadyValidSink.expectDequeue", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#expectDequeue(data:T):Unit", "kind" : "def"}, {"label" : "waitForValid", "tail" : "(): Unit", "member" : "chisel3.tester.TestAdapters.ReadyValidSink.waitForValid", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#waitForValid():Unit", "kind" : "def"}, {"member" : "chisel3.tester.TestAdapters.ReadyValidSink#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSink.html", "kind" : "class"}, {"name" : "chisel3.tester.TestAdapters.ReadyValidSource", "shortDescription" : "", "members_class" : [{"label" : "enqueueSeq", "tail" : "(data: Seq[T]): Unit", "member" : "chisel3.tester.TestAdapters.ReadyValidSource.enqueueSeq", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#enqueueSeq(data:Seq[T]):Unit", "kind" : "def"}, {"label" : "enqueue", "tail" : "(data: T): Unit", "member" : "chisel3.tester.TestAdapters.ReadyValidSource.enqueue", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#enqueue(data:T):Unit", "kind" : "def"}, {"label" : "enqueueNow", "tail" : "(data: T): Unit", "member" : "chisel3.tester.TestAdapters.ReadyValidSource.enqueueNow", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#enqueueNow(data:T):Unit", "kind" : "def"}, {"member" : "chisel3.tester.TestAdapters.ReadyValidSource#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chisel3\/tester\/TestAdapters\/package$$ReadyValidSource.html", "kind" : "class"}], "chiseltest.legacy.backends.vcs" : [{"name" : "chiseltest.legacy.backends.vcs.CommandEditsFile", "shortDescription" : "A string specifying a file containing regex edits for verilator command line", "object" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.legacy.backends.vcs.CommandEditsFile.options", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "chiseltest.legacy.backends.vcs.CommandEditsFile#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": String", "member" : "chiseltest.legacy.backends.vcs.CommandEditsFile.flags", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#flags:String", "kind" : "val"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chiseltest\/legacy\/backends\/vcs\/CommandEditsFile.html", "kind" : "case class"}, {"name" : "chiseltest.legacy.backends.vcs.CopyVpiFiles", "shortDescription" : "Copies the necessary header files used for verilator compilation to the specified destination folder", "object" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html", "members_object" : [{"label" : "apply", "tail" : "(destinationDirPath: String): Unit", "member" : "chiseltest.legacy.backends.vcs.CopyVpiFiles.apply", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#apply(destinationDirPath:String):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/CopyVpiFiles$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.legacy.backends.vcs.GenVcsVerilogHarness", "shortDescription" : "Generates the Module specific verilator harness cpp file for verilator compilation", "object" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html", "members_object" : [{"label" : "apply", "tail" : "(dut: MultiIOModule, writer: Writer, vpdFilePath: String, isGateLevel: Boolean): Unit", "member" : "chiseltest.legacy.backends.vcs.GenVcsVerilogHarness.apply", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#apply(dut:chisel3.MultiIOModule,writer:java.io.Writer,vpdFilePath:String,isGateLevel:Boolean):Unit", "kind" : "def"}, {"label" : "fixNames", "tail" : "(dutName: String, portSeq: (Seq[(Element, String)], Seq[(Element, String)])): (Seq[(Element, String)], Seq[(Element, String)])", "member" : "chiseltest.legacy.backends.vcs.GenVcsVerilogHarness.fixNames", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#fixNames(dutName:String,portSeq:(Seq[(chisel3.Element,String)],Seq[(chisel3.Element,String)])):(Seq[(chisel3.Element,String)],Seq[(chisel3.Element,String)])", "kind" : "def"}, {"label" : "getPorts", "tail" : "(dut: MultiIOModule, separator: String): (Seq[(Element, String)], Seq[(Element, String)])", "member" : "chiseltest.legacy.backends.vcs.GenVcsVerilogHarness.getPorts", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#getPorts(dut:chisel3.MultiIOModule,separator:String):(Seq[(chisel3.Element,String)],Seq[(chisel3.Element,String)])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/GenVcsVerilogHarness$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.legacy.backends.vcs.SuppressVcsVcd", "shortDescription" : "Used to suppress verilator simulation vcd output.", "object" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.legacy.backends.vcs.SuppressVcsVcd.options", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/SuppressVcsVcd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.legacy.backends.vcs.TestCommandOverride", "shortDescription" : "A string specifying a file containing regex edits for verilator command line", "object" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.legacy.backends.vcs.TestCommandOverride.options", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "chiseltest.legacy.backends.vcs.TestCommandOverride#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": String", "member" : "chiseltest.legacy.backends.vcs.TestCommandOverride.flags", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#flags:String", "kind" : "val"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chiseltest\/legacy\/backends\/vcs\/TestCommandOverride.html", "kind" : "case class"}, {"name" : "chiseltest.legacy.backends.vcs.VcsBackend", "shortDescription" : "Supports Backend and Threaded traits for ex", "members_class" : [{"label" : "schedulerState", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.schedulerState", "link" : "chiseltest\/internal\/ThreadedBackend.html#schedulerState", "kind" : "object"}, {"label" : "TesterThread", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TesterThread", "link" : "chiseltest\/internal\/ThreadedBackend.html#TesterThreadextendsAbstractTesterThread", "kind" : "class"}, {"label" : "PeekRecord", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.PeekRecord", "link" : "chiseltest\/internal\/ThreadedBackend.html#PeekRecordextendsProductwithSerializable", "kind" : "case class"}, {"label" : "TimescopeUtils", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TimescopeUtils", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimescopeUtils", "kind" : "object"}, {"label" : "Timescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.Timescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasOverridingPokeswithThreadedBackend.this.HasParent", "kind" : "class"}, {"label" : "PokeRecord", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.PokeRecord", "link" : "chiseltest\/internal\/ThreadedBackend.html#PokeRecordextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ThreadRootTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.ThreadRootTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#ThreadRootTimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasParentwithProductwithSerializable", "kind" : "case class"}, {"label" : "RootTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.RootTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#RootTimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasOverridingPokes", "kind" : "class"}, {"label" : "HasParent", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.HasParent", "link" : "chiseltest\/internal\/ThreadedBackend.html#HasParentextendsThreadedBackend.this.BaseTimescope", "kind" : "sealed trait"}, {"label" : "HasOverridingPokes", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.HasOverridingPokes", "link" : "chiseltest\/internal\/ThreadedBackend.html#HasOverridingPokesextendsThreadedBackend.this.BaseTimescope", "kind" : "sealed trait"}, {"label" : "BaseTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.BaseTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#BaseTimescopeextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "TimeRegion", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TimeRegion", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimeRegionextendsProductwithSerializable", "kind" : "case class"}, {"member" : "chiseltest.legacy.backends.vcs.VcsBackend#<init>", "error" : "unsupported entity"}, {"label" : "run", "tail" : "(testFn: (T) ⇒ Unit): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.run", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#run(testFn:T=>Unit):Unit", "kind" : "def"}, {"label" : "step", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.step", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#step(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "def"}, {"label" : "doTimescope", "tail" : "(contents: () ⇒ Unit): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.doTimescope", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#doTimescope(contents:()=>Unit):Unit", "kind" : "def"}, {"label" : "lastClockValue", "tail" : ": HashMap[Clock, Boolean]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.lastClockValue", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#lastClockValue:scala.collection.mutable.HashMap[chisel3.Clock,Boolean]", "kind" : "val"}, {"label" : "getClock", "tail" : "(clk: Clock): Boolean", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.getClock", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#getClock(clk:chisel3.Clock):Boolean", "kind" : "def"}, {"label" : "getClockCycle", "tail" : "(clk: Clock): Int", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.getClockCycle", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#getClockCycle(clk:chisel3.Clock):Int", "kind" : "def"}, {"label" : "clockCounter", "tail" : ": HashMap[Clock, Int]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.clockCounter", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#clockCounter:scala.collection.mutable.HashMap[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "expectBits", "tail" : "(signal: Data, value: BigInt, message: Option[String], decode: Option[(BigInt) ⇒ String], stale: Boolean): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.expectBits", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#expectBits(signal:chisel3.Data,value:scala.math.BigInt,message:Option[String],decode:Option[scala.math.BigInt=>String],stale:Boolean):Unit", "kind" : "def"}, {"label" : "peekBits", "tail" : "(signal: Data, stale: Boolean): BigInt", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.peekBits", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#peekBits(signal:chisel3.Data,stale:Boolean):scala.math.BigInt", "kind" : "def"}, {"label" : "pokeBits", "tail" : "(signal: Data, value: BigInt): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.pokeBits", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#pokeBits(signal:chisel3.Data,value:scala.math.BigInt):Unit", "kind" : "def"}, {"label" : "peekClock", "tail" : "(signal: Clock): Boolean", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.peekClock", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#peekClock(signal:chisel3.Clock):Boolean", "kind" : "def"}, {"label" : "pokeClock", "tail" : "(signal: Clock, value: Boolean): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.pokeClock", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#pokeClock(signal:chisel3.Clock,value:Boolean):Unit", "kind" : "def"}, {"label" : "getModule", "tail" : "(): T", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.getModule", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#getModule:T", "kind" : "def"}, {"label" : "getSinkClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.getSinkClocks", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#getSinkClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "def"}, {"label" : "getSourceClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.getSourceClocks", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#getSourceClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "def"}, {"label" : "resolveName", "tail" : "(signal: Data): String", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.resolveName", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#resolveName(signal:chisel3.Data):String", "kind" : "def"}, {"label" : "debugLog", "tail" : "(str: ⇒ String): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.debugLog", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#debugLog(str:=>String):Unit", "kind" : "def"}, {"label" : "verbose", "tail" : ": Boolean", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.verbose", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#verbose:Boolean", "kind" : "val"}, {"label" : "combinationalPaths", "tail" : ": Map[Data, Set[Data]]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.combinationalPaths", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#combinationalPaths:Map[chisel3.Data,Set[chisel3.Data]]", "kind" : "val"}, {"label" : "dataNames", "tail" : ": Map[Data, String]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.dataNames", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#dataNames:Map[chisel3.Data,String]", "kind" : "val"}, {"label" : "dut", "tail" : ": T", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.dut", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#dut:T", "kind" : "val"}, {"label" : "getParentTraceElements", "tail" : "(): Seq[StackTraceElement]", "member" : "chiseltest.internal.ThreadedBackend.getParentTraceElements", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#getParentTraceElements:Seq[StackTraceElement]", "kind" : "def"}, {"label" : "doJoin", "tail" : "(threads: Seq[AbstractTesterThread], stepAfter: Option[Clock]): Unit", "member" : "chiseltest.internal.ThreadedBackend.doJoin", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#doJoin(threads:Seq[chiseltest.internal.AbstractTesterThread],stepAfter:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "doFork", "tail" : "(runnable: () ⇒ Unit, name: Option[String], region: Option[Region]): TesterThread", "member" : "chiseltest.internal.ThreadedBackend.doFork", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#doFork(runnable:()=>Unit,name:Option[String],region:Option[chiseltest.Region]):ThreadedBackend.this.TesterThread", "kind" : "def"}, {"label" : "threadFinished", "tail" : "(thread: TesterThread): Unit", "member" : "chiseltest.internal.ThreadedBackend.threadFinished", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#threadFinished(thread:ThreadedBackend.this.TesterThread):Unit", "kind" : "def"}, {"label" : "scheduler", "tail" : "(): Unit", "member" : "chiseltest.internal.ThreadedBackend.scheduler", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#scheduler():Unit", "kind" : "def"}, {"label" : "runThreads", "tail" : "(clocks: Set[Clock]): Unit", "member" : "chiseltest.internal.ThreadedBackend.runThreads", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#runThreads(clocks:Set[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "driverSemaphore", "tail" : ": Semaphore", "member" : "chiseltest.internal.ThreadedBackend.driverSemaphore", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#driverSemaphore:java.util.concurrent.Semaphore", "kind" : "val"}, {"label" : "currentThread", "tail" : ": Option[TesterThread]", "member" : "chiseltest.internal.ThreadedBackend.currentThread", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#currentThread:Option[ThreadedBackend.this.TesterThread]", "kind" : "val"}, {"label" : "interruptedException", "tail" : ": ConcurrentLinkedQueue[Throwable]", "member" : "chiseltest.internal.ThreadedBackend.interruptedException", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#interruptedException:java.util.concurrent.ConcurrentLinkedQueue[Throwable]", "kind" : "val"}, {"label" : "timestep", "tail" : "(): Unit", "member" : "chiseltest.internal.ThreadedBackend.timestep", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#timestep():Unit", "kind" : "def"}, {"label" : "closeTimescope", "tail" : "(timescope: Timescope): Map[Data, Option[BigInt]]", "member" : "chiseltest.internal.ThreadedBackend.closeTimescope", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#closeTimescope(timescope:ThreadedBackend.this.Timescope):Map[chisel3.Data,Option[BigInt]]", "kind" : "def"}, {"label" : "newTimescope", "tail" : "(): Timescope", "member" : "chiseltest.internal.ThreadedBackend.newTimescope", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#newTimescope():ThreadedBackend.this.Timescope", "kind" : "def"}, {"label" : "doPeek", "tail" : "(signal: Data, trace: Throwable): Unit", "member" : "chiseltest.internal.ThreadedBackend.doPeek", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#doPeek(signal:chisel3.Data,trace:Throwable):Unit", "kind" : "def"}, {"label" : "doPoke", "tail" : "(signal: Data, value: BigInt, trace: Throwable): Unit", "member" : "chiseltest.internal.ThreadedBackend.doPoke", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#doPoke(signal:chisel3.Data,value:BigInt,trace:Throwable):Unit", "kind" : "def"}, {"label" : "rootTimescope", "tail" : ": Option[RootTimescope]", "member" : "chiseltest.internal.ThreadedBackend.rootTimescope", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#rootTimescope:Option[ThreadedBackend.this.RootTimescope]", "kind" : "val"}, {"label" : "currentTime", "tail" : "(): TimeRegion", "member" : "chiseltest.internal.ThreadedBackend.currentTime", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#currentTime:ThreadedBackend.this.TimeRegion", "kind" : "def"}, {"label" : "currentTimestep", "tail" : ": Int", "member" : "chiseltest.internal.ThreadedBackend.currentTimestep", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#currentTimestep:Int", "kind" : "val"}, {"label" : "setTimeout", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.internal.ThreadedBackend.setTimeout", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#setTimeout(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "def"}, {"label" : "idleLimits", "tail" : ": Map[Clock, Int]", "member" : "chiseltest.internal.ThreadedBackend.idleLimits", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#idleLimits:scala.collection.mutable.Map[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "idleCycles", "tail" : ": Map[Clock, Int]", "member" : "chiseltest.internal.ThreadedBackend.idleCycles", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#idleCycles:scala.collection.mutable.Map[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "getVar", "tail" : "(key: Any): Option[Any]", "member" : "chiseltest.internal.BackendInterface.getVar", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#getVar(key:Any):Option[Any]", "kind" : "def"}, {"label" : "setVar", "tail" : "(key: Any, value: Any): Unit", "member" : "chiseltest.internal.BackendInterface.setVar", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#setVar(key:Any,value:Any):Unit", "kind" : "def"}, {"label" : "testMap", "tail" : ": HashMap[Any, Any]", "member" : "chiseltest.internal.BackendInterface.testMap", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#testMap:scala.collection.mutable.HashMap[Any,Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/legacy\/backends\/vcs\/VcsBackend.html", "kind" : "class"}, {"name" : "chiseltest.legacy.backends.vcs.VcsCFlags", "shortDescription" : "A sequence string flags to add to verilator command line", "object" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.legacy.backends.vcs.VcsCFlags.options", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "chiseltest.legacy.backends.vcs.VcsCFlags#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": Seq[String]", "member" : "chiseltest.legacy.backends.vcs.VcsCFlags.flags", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#flags:Seq[String]", "kind" : "val"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chiseltest\/legacy\/backends\/vcs\/VcsCFlags.html", "kind" : "case class"}, {"name" : "chiseltest.legacy.backends.vcs.VcsExecutive", "shortDescription" : "", "object" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html", "members_object" : [{"label" : "start", "tail" : "(dutGen: () ⇒ T, annotationSeq: AnnotationSeq): BackendInstance[T]", "member" : "chiseltest.legacy.backends.vcs.VcsExecutive.start", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#start[T<:chisel3.MultiIOModule](dutGen:()=>T,annotationSeq:firrtl.AnnotationSeq):chiseltest.internal.BackendInstance[T]", "kind" : "def"}, {"label" : "componentToName", "tail" : "(component: ReferenceTarget): String", "member" : "chiseltest.legacy.backends.vcs.VcsExecutive.componentToName", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#componentToName(component:firrtl.annotations.ReferenceTarget):String", "kind" : "def"}, {"label" : "combinationalPathsToData", "tail" : "(dut: BaseModule, paths: Seq[CombinationalPath], dataNames: Map[Data, String], componentToName: (ReferenceTarget) ⇒ String): Map[Data, Set[Data]]", "member" : "chiseltest.backends.BackendExecutive.combinationalPathsToData", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#combinationalPathsToData(dut:chisel3.experimental.BaseModule,paths:Seq[firrtl.transforms.CombinationalPath],dataNames:Map[chisel3.Data,String],componentToName:firrtl.annotations.ReferenceTarget=>String):Map[chisel3.Data,Set[chisel3.Data]]", "kind" : "def"}, {"label" : "getDataNames", "tail" : "(name: String, data: Data): Seq[(Data, String)]", "member" : "chiseltest.backends.BackendExecutive.getDataNames", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#getDataNames(name:String,data:chisel3.Data):Seq[(chisel3.Data,String)]", "kind" : "def"}, {"label" : "getTopModule", "tail" : "(circuit: Circuit): BaseModule", "member" : "chiseltest.backends.BackendExecutive.getTopModule", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#getTopModule(circuit:chisel3.internal.firrtl.Circuit):chisel3.experimental.BaseModule", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsExecutive$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.legacy.backends.vcs.VcsFlags", "shortDescription" : "A sequence string flags to add to verilator command line", "object" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.legacy.backends.vcs.VcsFlags.options", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "chiseltest.legacy.backends.vcs.VcsFlags#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": Seq[String]", "member" : "chiseltest.legacy.backends.vcs.VcsFlags.flags", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#flags:Seq[String]", "kind" : "val"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chiseltest\/legacy\/backends\/vcs\/VcsFlags.html", "kind" : "case class"}, {"name" : "chiseltest.legacy.backends.vcs.VcsOption", "members_trait" : [{"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#serialize:String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "chiseltest\/legacy\/backends\/vcs\/VcsOption.html", "kind" : "trait"}, {"name" : "chiseltest.legacy.backends.vcs.VcsOptionObject", "members_trait" : [{"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#serialize:String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "options", "tail" : "(): Seq[ShellOption[_]]", "member" : "firrtl.options.HasShellOptions.options", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "chiseltest\/legacy\/backends\/vcs\/VcsOptionObject.html", "kind" : "trait"}, {"name" : "chiseltest.legacy.backends.vcs.VerilogToVcs", "shortDescription" : "", "object" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html", "members_object" : [{"label" : "apply", "tail" : "(topModule: String, dir: File, vcsHarness: File, moreVcsFlags: Seq[String], moreVcsCFlags: Seq[String], editCommands: String): ProcessBuilder", "member" : "chiseltest.legacy.backends.vcs.VerilogToVcs.apply", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#apply(topModule:String,dir:java.io.File,vcsHarness:java.io.File,moreVcsFlags:Seq[String],moreVcsCFlags:Seq[String],editCommands:String):scala.sys.process.ProcessBuilder", "kind" : "def"}, {"label" : "constructCSimulatorCommand", "tail" : "(topModule: String, dir: File, harness: File, iFlags: Seq[String], iCFlags: Seq[String]): String", "member" : "chiseltest.legacy.backends.vcs.VerilogToVcs.constructCSimulatorCommand", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#constructCSimulatorCommand(topModule:String,dir:java.io.File,harness:java.io.File,iFlags:Seq[String],iCFlags:Seq[String]):String", "kind" : "def"}, {"label" : "composeFlags", "tail" : "(topModule: String, dir: File, moreVcsFlags: Seq[String], moreVcsCFlags: Seq[String]): (Seq[String], Seq[String])", "member" : "chiseltest.legacy.backends.vcs.VerilogToVcs.composeFlags", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#composeFlags(topModule:String,dir:java.io.File,moreVcsFlags:Seq[String],moreVcsCFlags:Seq[String]):(Seq[String],Seq[String])", "kind" : "def"}, {"label" : "composeCommand", "tail" : "(topModule: String, dir: File, flags: Seq[String], cFlags: Seq[String]): String", "member" : "chiseltest.legacy.backends.vcs.VerilogToVcs.composeCommand", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#composeCommand(topModule:String,dir:java.io.File,flags:Seq[String],cFlags:Seq[String]):String", "kind" : "def"}, {"label" : "prefix", "tail" : ": String", "member" : "chiseltest.legacy.backends.vcs.VerilogToVcs.prefix", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#prefix:String", "kind" : "val"}, {"label" : "editCSimulatorCommand", "tail" : "(buildCommand: String, editCommands: String): String", "member" : "chiseltest.legacy.backends.verilator.EditableBuildCSimulatorCommand.editCSimulatorCommand", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#editCSimulatorCommand(buildCommand:String,editCommands:String):String", "kind" : "def"}, {"label" : "blackBoxVerilogList", "tail" : "(dir: File): Seq[String]", "member" : "chiseltest.legacy.backends.verilator.EditableBuildCSimulatorCommand.blackBoxVerilogList", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#blackBoxVerilogList(dir:java.io.File):Seq[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/vcs\/VerilogToVcs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "chiseltest.experimental.UncheckedClockPeek" : [{"name" : "chiseltest.experimental.UncheckedClockPeek.PeekableClock", "shortDescription" : "This provides a way to peek clocks (input or output).", "members_class" : [{"label" : "peekClock", "tail" : "(): Boolean", "member" : "chiseltest.experimental.UncheckedClockPeek.PeekableClock.peekClock", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#peekClock():Boolean", "kind" : "def"}, {"member" : "chiseltest.experimental.UncheckedClockPeek.PeekableClock#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/experimental\/UncheckedClockPeek\/package$$PeekableClock.html", "kind" : "class"}], "utest" : [], "chisel3" : [], "chiseltest.legacy.backends" : [], "chiseltest.experimental" : [{"name" : "chiseltest.experimental.AsyncResetBlackBoxFactory", "shortDescription" : "This generates the black box instance that Treadle will use", "members_class" : [{"label" : "createInstance", "tail" : "(instanceName: String, blackBoxName: String): Option[ScalaBlackBox]", "member" : "chiseltest.experimental.AsyncResetBlackBoxFactory.createInstance", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#createInstance(instanceName:String,blackBoxName:String):Option[treadle.ScalaBlackBox]", "kind" : "def"}, {"member" : "chiseltest.experimental.AsyncResetBlackBoxFactory#<init>", "error" : "unsupported entity"}, {"label" : "add", "tail" : "(blackBox: ScalaBlackBox): ScalaBlackBox", "member" : "treadle.ScalaBlackBoxFactory.add", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#add(blackBox:treadle.ScalaBlackBox):treadle.ScalaBlackBox", "kind" : "def"}, {"label" : "boxes", "tail" : ": HashMap[String, ScalaBlackBox]", "member" : "treadle.ScalaBlackBoxFactory.boxes", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#boxes:scala.collection.mutable.HashMap[String,treadle.ScalaBlackBox]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/experimental\/AsyncResetBlackBoxFactory.html", "kind" : "class"}, {"name" : "chiseltest.experimental.AsyncResetReg", "shortDescription" : "This is a black box example that only works with treadle as it does notdefine the necessary verilog for verilator\/VCS", "members_class" : [{"label" : "rst", "tail" : ": Bool", "member" : "chiseltest.experimental.AsyncResetReg.rst", "link" : "chiseltest\/experimental\/AsyncResetReg.html#rst:chisel3.Bool", "kind" : "val"}, {"label" : "clk", "tail" : ": Clock", "member" : "chiseltest.experimental.AsyncResetReg.clk", "link" : "chiseltest\/experimental\/AsyncResetReg.html#clk:chisel3.Clock", "kind" : "val"}, {"label" : "en", "tail" : ": Bool", "member" : "chiseltest.experimental.AsyncResetReg.en", "link" : "chiseltest\/experimental\/AsyncResetReg.html#en:chisel3.Bool", "kind" : "val"}, {"label" : "q", "tail" : ": UInt", "member" : "chiseltest.experimental.AsyncResetReg.q", "link" : "chiseltest\/experimental\/AsyncResetReg.html#q:chisel3.UInt", "kind" : "val"}, {"label" : "d", "tail" : ": UInt", "member" : "chiseltest.experimental.AsyncResetReg.d", "link" : "chiseltest\/experimental\/AsyncResetReg.html#d:chisel3.UInt", "kind" : "val"}, {"member" : "chiseltest.experimental.AsyncResetReg#<init>", "error" : "unsupported entity"}, {"label" : "params", "tail" : ": Map[String, Param]", "member" : "chisel3.experimental.ExtModule.params", "link" : "chiseltest\/experimental\/AsyncResetReg.html#params:Map[String,chisel3.experimental.Param]", "kind" : "val"}, {"label" : "instanceName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.instanceName", "link" : "chiseltest\/experimental\/AsyncResetReg.html#instanceName:String", "kind" : "def"}, {"label" : "IO", "tail" : "(iodef: T): T", "member" : "chisel3.experimental.BaseModule.IO", "link" : "chiseltest\/experimental\/AsyncResetReg.html#IO[T<:chisel3.Data](iodef:T):T", "kind" : "def"}, {"label" : "_bindIoInPlace", "tail" : "(iodef: Data): Unit", "member" : "chisel3.experimental.BaseModule._bindIoInPlace", "link" : "chiseltest\/experimental\/AsyncResetReg.html#_bindIoInPlace(iodef:chisel3.Data):Unit", "kind" : "def"}, {"label" : "_compatAutoWrapPorts", "tail" : "(): Unit", "member" : "chisel3.experimental.BaseModule._compatAutoWrapPorts", "link" : "chiseltest\/experimental\/AsyncResetReg.html#_compatAutoWrapPorts():Unit", "kind" : "def"}, {"label" : "nameIds", "tail" : "(rootClass: Class[_]): HashMap[HasId, String]", "member" : "chisel3.experimental.BaseModule.nameIds", "link" : "chiseltest\/experimental\/AsyncResetReg.html#nameIds(rootClass:Class[_]):scala.collection.mutable.HashMap[chisel3.internal.HasId,String]", "kind" : "def"}, {"label" : "toAbsoluteTarget", "tail" : "(): IsModule", "member" : "chisel3.experimental.BaseModule.toAbsoluteTarget", "link" : "chiseltest\/experimental\/AsyncResetReg.html#toAbsoluteTarget:firrtl.annotations.IsModule", "kind" : "final def"}, {"label" : "toTarget", "tail" : "(): ModuleTarget", "member" : "chisel3.experimental.BaseModule.toTarget", "link" : "chiseltest\/experimental\/AsyncResetReg.html#toTarget:firrtl.annotations.ModuleTarget", "kind" : "final def"}, {"label" : "toNamed", "tail" : "(): ModuleName", "member" : "chisel3.experimental.BaseModule.toNamed", "link" : "chiseltest\/experimental\/AsyncResetReg.html#toNamed:firrtl.annotations.ModuleName", "kind" : "final def"}, {"label" : "name", "tail" : ": String", "member" : "chisel3.experimental.BaseModule.name", "link" : "chiseltest\/experimental\/AsyncResetReg.html#name:String", "kind" : "final lazy val"}, {"label" : "desiredName", "tail" : "(): String", "member" : "chisel3.experimental.BaseModule.desiredName", "link" : "chiseltest\/experimental\/AsyncResetReg.html#desiredName:String", "kind" : "def"}, {"label" : "portsSize", "tail" : "(): Int", "member" : "chisel3.experimental.BaseModule.portsSize", "link" : "chiseltest\/experimental\/AsyncResetReg.html#portsSize:Int", "kind" : "def"}, {"label" : "portsContains", "tail" : "(elem: Data): Boolean", "member" : "chisel3.experimental.BaseModule.portsContains", "link" : "chiseltest\/experimental\/AsyncResetReg.html#portsContains(elem:chisel3.Data):Boolean", "kind" : "def"}, {"label" : "getModulePorts", "tail" : "(): Seq[Data]", "member" : "chisel3.experimental.BaseModule.getModulePorts", "link" : "chiseltest\/experimental\/AsyncResetReg.html#getModulePorts:Seq[chisel3.Data]", "kind" : "def"}, {"label" : "getIds", "tail" : "(): Seq[HasId]", "member" : "chisel3.experimental.BaseModule.getIds", "link" : "chiseltest\/experimental\/AsyncResetReg.html#getIds:Seq[chisel3.internal.HasId]", "kind" : "def"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "chisel3.experimental.BaseModule._closed", "link" : "chiseltest\/experimental\/AsyncResetReg.html#_closed:Boolean", "kind" : "var"}, {"label" : "circuitName", "tail" : "(): String", "member" : "chisel3.internal.HasId.circuitName", "link" : "chiseltest\/experimental\/AsyncResetReg.html#circuitName:String", "kind" : "def"}, {"label" : "parentModName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentModName", "link" : "chiseltest\/experimental\/AsyncResetReg.html#parentModName:String", "kind" : "def"}, {"label" : "parentPathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.parentPathName", "link" : "chiseltest\/experimental\/AsyncResetReg.html#parentPathName:String", "kind" : "def"}, {"label" : "pathName", "tail" : "(): String", "member" : "chisel3.internal.HasId.pathName", "link" : "chiseltest\/experimental\/AsyncResetReg.html#pathName:String", "kind" : "def"}, {"label" : "hasSeed", "tail" : "(): Boolean", "member" : "chisel3.internal.HasId.hasSeed", "link" : "chiseltest\/experimental\/AsyncResetReg.html#hasSeed:Boolean", "kind" : "def"}, {"label" : "computeName", "tail" : "(defaultPrefix: Option[String], defaultSeed: Option[String]): Option[String]", "member" : "chisel3.internal.HasId.computeName", "link" : "chiseltest\/experimental\/AsyncResetReg.html#computeName(defaultPrefix:Option[String],defaultSeed:Option[String]):Option[String]", "kind" : "def"}, {"label" : "suggestName", "tail" : "(seed: ⇒ String): AsyncResetReg.this.type", "member" : "chisel3.internal.HasId.suggestName", "link" : "chiseltest\/experimental\/AsyncResetReg.html#suggestName(seed:=>String):HasId.this.type", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "chisel3.internal.HasId.equals", "link" : "chiseltest\/experimental\/AsyncResetReg.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "chisel3.internal.HasId.hashCode", "link" : "chiseltest\/experimental\/AsyncResetReg.html#hashCode():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/experimental\/AsyncResetReg.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/experimental\/AsyncResetReg.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/experimental\/AsyncResetReg.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/experimental\/AsyncResetReg.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/experimental\/AsyncResetReg.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/experimental\/AsyncResetReg.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/experimental\/AsyncResetReg.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/AsyncResetReg.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/AsyncResetReg.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/AsyncResetReg.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/experimental\/AsyncResetReg.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/experimental\/AsyncResetReg.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/experimental\/AsyncResetReg.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/experimental\/AsyncResetReg.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/experimental\/AsyncResetReg.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/experimental\/AsyncResetReg.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/experimental\/AsyncResetReg.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/experimental\/AsyncResetReg.html", "kind" : "class"}, {"name" : "chiseltest.experimental.AsyncResetRegScalaImpl", "shortDescription" : "This is the scala implementation of the AsyncResetReg black box.", "members_class" : [{"label" : "setParams", "tail" : "(params: Seq[Param]): Unit", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.setParams", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#setParams(params:Seq[firrtl.ir.Param]):Unit", "kind" : "def"}, {"label" : "getDependencies", "tail" : "(): Seq[(String, Set[String])]", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.getDependencies", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#getDependencies:Seq[(String,scala.collection.Set[String])]", "kind" : "def"}, {"label" : "outputDependencies", "tail" : "(outputName: String): Seq[String]", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.outputDependencies", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#outputDependencies(outputName:String):Seq[String]", "kind" : "def"}, {"label" : "clockChange", "tail" : "(transition: Transition, clockName: String): Unit", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.clockChange", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#clockChange(transition:treadle.executable.Transition,clockName:String):Unit", "kind" : "def"}, {"label" : "inputChanged", "tail" : "(name: String, value: BigInt): Unit", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.inputChanged", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#inputChanged(name:String,value:BigInt):Unit", "kind" : "def"}, {"label" : "getOutput", "tail" : "(inputValues: Seq[BigInt], tpe: Type, outputName: String): BigInt", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.getOutput", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#getOutput(inputValues:Seq[BigInt],tpe:firrtl.ir.Type,outputName:String):BigInt", "kind" : "def"}, {"label" : "enable", "tail" : ": Boolean", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.enable", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#enable:Boolean", "kind" : "var"}, {"label" : "resetValue", "tail" : ": BigInt", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.resetValue", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#resetValue:BigInt", "kind" : "var"}, {"label" : "currentValue", "tail" : ": BigInt", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.currentValue", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#currentValue:BigInt", "kind" : "var"}, {"label" : "nextValue", "tail" : ": BigInt", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.nextValue", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#nextValue:BigInt", "kind" : "var"}, {"label" : "name", "tail" : "(): String", "member" : "chiseltest.experimental.AsyncResetRegScalaImpl.name", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#name:String", "kind" : "def"}, {"member" : "chiseltest.experimental.AsyncResetRegScalaImpl#<init>", "error" : "unsupported entity"}, {"label" : "finish", "tail" : "(): Unit", "member" : "treadle.ScalaBlackBox.finish", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#finish():Unit", "kind" : "def"}, {"label" : "setPlusArgs", "tail" : "(plusArgs: Seq[PlusArg]): Unit", "member" : "treadle.ScalaBlackBox.setPlusArgs", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#setPlusArgs(plusArgs:Seq[treadle.blackboxes.PlusArg]):Unit", "kind" : "def"}, {"label" : "completeName", "tail" : "(componentName: String): String", "member" : "treadle.ScalaBlackBox.completeName", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#completeName(componentName:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/experimental\/AsyncResetRegScalaImpl.html", "kind" : "class"}, {"name" : "chiseltest.experimental.ChiselTestCli", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/experimental\/ChiselTestCli.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/experimental\/ChiselTestCli.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/experimental\/ChiselTestCli.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/experimental\/ChiselTestCli.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/experimental\/ChiselTestCli.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/experimental\/ChiselTestCli.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/experimental\/ChiselTestCli.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/ChiselTestCli.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/ChiselTestCli.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/ChiselTestCli.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/experimental\/ChiselTestCli.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/experimental\/ChiselTestCli.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/experimental\/ChiselTestCli.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/experimental\/ChiselTestCli.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/experimental\/ChiselTestCli.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/experimental\/ChiselTestCli.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/experimental\/ChiselTestCli.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/experimental\/ChiselTestCli.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/experimental\/ChiselTestCli.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "chiseltest\/experimental\/ChiselTestCli.html", "kind" : "trait"}, {"name" : "chiseltest.experimental.ChiselTestShell", "shortDescription" : "", "members_class" : [{"member" : "chiseltest.experimental.ChiselTestShell#<init>", "error" : "unsupported entity"}, {"label" : "parse", "tail" : "(args: Array[String], initAnnos: AnnotationSeq): AnnotationSeq", "member" : "firrtl.options.Shell.parse", "link" : "chiseltest\/experimental\/ChiselTestShell.html#parse(args:Array[String],initAnnos:firrtl.AnnotationSeq):firrtl.AnnotationSeq", "kind" : "def"}, {"label" : "registeredTransforms", "tail" : ": Seq[RegisteredTransform]", "member" : "firrtl.options.Shell.registeredTransforms", "link" : "chiseltest\/experimental\/ChiselTestShell.html#registeredTransforms:Seq[firrtl.options.RegisteredTransform]", "kind" : "final lazy val"}, {"label" : "registeredLibraries", "tail" : ": Seq[RegisteredLibrary]", "member" : "firrtl.options.Shell.registeredLibraries", "link" : "chiseltest\/experimental\/ChiselTestShell.html#registeredLibraries:Seq[firrtl.options.RegisteredLibrary]", "kind" : "final lazy val"}, {"label" : "parser", "tail" : ": OptionParser[AnnotationSeq] with DuplicateHandling with ExceptOnError", "member" : "firrtl.options.Shell.parser", "link" : "chiseltest\/experimental\/ChiselTestShell.html#parser:scopt.OptionParser[firrtl.AnnotationSeq]withfirrtl.options.DuplicateHandlingwithfirrtl.options.ExceptOnError", "kind" : "val"}, {"label" : "applicationName", "tail" : ": String", "member" : "firrtl.options.Shell.applicationName", "link" : "chiseltest\/experimental\/ChiselTestShell.html#applicationName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/experimental\/ChiselTestShell.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/experimental\/ChiselTestShell.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/experimental\/ChiselTestShell.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/experimental\/ChiselTestShell.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/experimental\/ChiselTestShell.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/experimental\/ChiselTestShell.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/experimental\/ChiselTestShell.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/ChiselTestShell.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/ChiselTestShell.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/experimental\/ChiselTestShell.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/experimental\/ChiselTestShell.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/experimental\/ChiselTestShell.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/experimental\/ChiselTestShell.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/experimental\/ChiselTestShell.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/experimental\/ChiselTestShell.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/experimental\/ChiselTestShell.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/experimental\/ChiselTestShell.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/experimental\/ChiselTestShell.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/experimental\/ChiselTestShell.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/experimental\/ChiselTestShell.html", "kind" : "class"}], "chiseltest.legacy.backends.verilator" : [{"name" : "chiseltest.legacy.backends.verilator.CommandEditor", "shortDescription" : "This function applies a last chance method of making final alteration of the ivl\/vcs command line.", "object" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html", "members_class" : [{"label" : "apply", "tail" : "(command: String): String", "member" : "chiseltest.legacy.backends.verilator.CommandEditor.apply", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#apply(command:String):String", "kind" : "def"}, {"member" : "chiseltest.legacy.backends.verilator.CommandEditor#<init>", "error" : "unsupported entity"}, {"label" : "editCommands", "tail" : ": Seq[String]", "member" : "chiseltest.legacy.backends.verilator.CommandEditor.editCommands", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#editCommands:Seq[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(fileOrEditor: String, messagePrefix: String): CommandEditor", "member" : "chiseltest.legacy.backends.verilator.CommandEditor.apply", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#apply(fileOrEditor:String,messagePrefix:String):chiseltest.legacy.backends.verilator.CommandEditor", "kind" : "def"}, {"label" : "DefaultPrefix", "tail" : ": String", "member" : "chiseltest.legacy.backends.verilator.CommandEditor.DefaultPrefix", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#DefaultPrefix:String", "kind" : "val"}, {"label" : "Verbose", "tail" : ": Regex", "member" : "chiseltest.legacy.backends.verilator.CommandEditor.Verbose", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#Verbose:scala.util.matching.Regex", "kind" : "val"}, {"label" : "RegexPrefixPattern", "tail" : ": Regex", "member" : "chiseltest.legacy.backends.verilator.CommandEditor.RegexPrefixPattern", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#RegexPrefixPattern:scala.util.matching.Regex", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/legacy\/backends\/verilator\/CommandEditor.html", "kind" : "class"}, {"name" : "chiseltest.legacy.backends.verilator.CommandEditsFile", "shortDescription" : "A string specifying a file containing regex edits for verilator command line", "object" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.legacy.backends.verilator.CommandEditsFile.options", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "chiseltest.legacy.backends.verilator.CommandEditsFile#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": String", "member" : "chiseltest.legacy.backends.verilator.CommandEditsFile.flags", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#flags:String", "kind" : "val"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chiseltest\/legacy\/backends\/verilator\/CommandEditsFile.html", "kind" : "case class"}, {"name" : "chiseltest.legacy.backends.verilator.CopyVerilatorHeaderFiles", "shortDescription" : "Copies the necessary header files used for verilator compilation to the specified destination folder", "object" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html", "members_object" : [{"label" : "apply", "tail" : "(destinationDirPath: String): Unit", "member" : "chiseltest.legacy.backends.verilator.CopyVerilatorHeaderFiles.apply", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#apply(destinationDirPath:String):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/CopyVerilatorHeaderFiles$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.legacy.backends.verilator.EditableBuildCSimulatorCommand", "members_trait" : [{"label" : "editCSimulatorCommand", "tail" : "(buildCommand: String, editCommands: String): String", "member" : "chiseltest.legacy.backends.verilator.EditableBuildCSimulatorCommand.editCSimulatorCommand", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#editCSimulatorCommand(buildCommand:String,editCommands:String):String", "kind" : "def"}, {"label" : "blackBoxVerilogList", "tail" : "(dir: File): Seq[String]", "member" : "chiseltest.legacy.backends.verilator.EditableBuildCSimulatorCommand.blackBoxVerilogList", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#blackBoxVerilogList(dir:java.io.File):Seq[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "constructCSimulatorCommand", "tail" : "(topModule: String, dir: File, harness: File, flags: Seq[String], cFlags: Seq[String]): String", "member" : "chiseltest.legacy.backends.verilator.EditableBuildCSimulatorCommand.constructCSimulatorCommand", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#constructCSimulatorCommand(topModule:String,dir:java.io.File,harness:java.io.File,flags:Seq[String],cFlags:Seq[String]):String", "kind" : "abstract def"}, {"label" : "composeCommand", "tail" : "(topModule: String, dir: File, flags: Seq[String], cFlags: Seq[String]): String", "member" : "chiseltest.legacy.backends.verilator.EditableBuildCSimulatorCommand.composeCommand", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#composeCommand(topModule:String,dir:java.io.File,flags:Seq[String],cFlags:Seq[String]):String", "kind" : "abstract def"}, {"label" : "composeFlags", "tail" : "(topModule: String, dir: File, moreIvlFlags: Seq[String], moreIvlCFlags: Seq[String]): (Seq[String], Seq[String])", "member" : "chiseltest.legacy.backends.verilator.EditableBuildCSimulatorCommand.composeFlags", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#composeFlags(topModule:String,dir:java.io.File,moreIvlFlags:Seq[String],moreIvlCFlags:Seq[String]):(Seq[String],Seq[String])", "kind" : "abstract def"}, {"label" : "prefix", "tail" : ": String", "member" : "chiseltest.legacy.backends.verilator.EditableBuildCSimulatorCommand.prefix", "link" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html#prefix:String", "kind" : "abstract val"}], "shortDescription" : "An EditableBuildCSimulatorCommand provides methods for assembling a system command string from provided flags and editing specifications.", "trait" : "chiseltest\/legacy\/backends\/verilator\/EditableBuildCSimulatorCommand.html", "kind" : "trait"}, {"name" : "chiseltest.legacy.backends.verilator.SuppressVerilatorVcd", "shortDescription" : "Used to suppress verilator simulation vcd output.", "object" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.legacy.backends.verilator.SuppressVerilatorVcd.options", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/SuppressVerilatorVcd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.legacy.backends.verilator.TestCommandOverride", "shortDescription" : "A string specifying a file containing regex edits for verilator command line", "object" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.legacy.backends.verilator.TestCommandOverride.options", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "chiseltest.legacy.backends.verilator.TestCommandOverride#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": String", "member" : "chiseltest.legacy.backends.verilator.TestCommandOverride.flags", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#flags:String", "kind" : "val"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chiseltest\/legacy\/backends\/verilator\/TestCommandOverride.html", "kind" : "case class"}, {"name" : "chiseltest.legacy.backends.verilator.Utils", "shortDescription" : "", "object" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html", "members_object" : [{"label" : "unsignedBigIntToSigned", "tail" : "(unsigned: BigInt, width: Int): BigInt", "member" : "chiseltest.legacy.backends.verilator.Utils.unsignedBigIntToSigned", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#unsignedBigIntToSigned(unsigned:BigInt,width:Int):BigInt", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/Utils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.legacy.backends.verilator.VerilatorBackend", "shortDescription" : "Supports Backend and Threaded traits for ex", "members_class" : [{"label" : "schedulerState", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.schedulerState", "link" : "chiseltest\/internal\/ThreadedBackend.html#schedulerState", "kind" : "object"}, {"label" : "TesterThread", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TesterThread", "link" : "chiseltest\/internal\/ThreadedBackend.html#TesterThreadextendsAbstractTesterThread", "kind" : "class"}, {"label" : "PeekRecord", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.PeekRecord", "link" : "chiseltest\/internal\/ThreadedBackend.html#PeekRecordextendsProductwithSerializable", "kind" : "case class"}, {"label" : "TimescopeUtils", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TimescopeUtils", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimescopeUtils", "kind" : "object"}, {"label" : "Timescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.Timescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasOverridingPokeswithThreadedBackend.this.HasParent", "kind" : "class"}, {"label" : "PokeRecord", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.PokeRecord", "link" : "chiseltest\/internal\/ThreadedBackend.html#PokeRecordextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ThreadRootTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.ThreadRootTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#ThreadRootTimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasParentwithProductwithSerializable", "kind" : "case class"}, {"label" : "RootTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.RootTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#RootTimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasOverridingPokes", "kind" : "class"}, {"label" : "HasParent", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.HasParent", "link" : "chiseltest\/internal\/ThreadedBackend.html#HasParentextendsThreadedBackend.this.BaseTimescope", "kind" : "sealed trait"}, {"label" : "HasOverridingPokes", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.HasOverridingPokes", "link" : "chiseltest\/internal\/ThreadedBackend.html#HasOverridingPokesextendsThreadedBackend.this.BaseTimescope", "kind" : "sealed trait"}, {"label" : "BaseTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.BaseTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#BaseTimescopeextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "TimeRegion", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TimeRegion", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimeRegionextendsProductwithSerializable", "kind" : "case class"}, {"label" : "run", "tail" : "(testFn: (T) ⇒ Unit): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.run", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#run(testFn:T=>Unit):Unit", "kind" : "def"}, {"label" : "step", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.step", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#step(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "def"}, {"label" : "doTimescope", "tail" : "(contents: () ⇒ Unit): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.doTimescope", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#doTimescope(contents:()=>Unit):Unit", "kind" : "def"}, {"label" : "lastClockValue", "tail" : ": HashMap[Clock, Boolean]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.lastClockValue", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#lastClockValue:scala.collection.mutable.HashMap[chisel3.Clock,Boolean]", "kind" : "val"}, {"label" : "getClock", "tail" : "(clk: Clock): Boolean", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.getClock", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#getClock(clk:chisel3.Clock):Boolean", "kind" : "def"}, {"label" : "getClockCycle", "tail" : "(clk: Clock): Int", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.getClockCycle", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#getClockCycle(clk:chisel3.Clock):Int", "kind" : "def"}, {"label" : "clockCounter", "tail" : ": HashMap[Clock, Int]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.clockCounter", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#clockCounter:scala.collection.mutable.HashMap[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "expectBits", "tail" : "(signal: Data, value: BigInt, message: Option[String], decode: Option[(BigInt) ⇒ String], stale: Boolean): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.expectBits", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#expectBits(signal:chisel3.Data,value:scala.math.BigInt,message:Option[String],decode:Option[scala.math.BigInt=>String],stale:Boolean):Unit", "kind" : "def"}, {"label" : "peekBits", "tail" : "(signal: Data, stale: Boolean): BigInt", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.peekBits", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#peekBits(signal:chisel3.Data,stale:Boolean):scala.math.BigInt", "kind" : "def"}, {"label" : "pokeBits", "tail" : "(signal: Data, value: BigInt): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.pokeBits", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#pokeBits(signal:chisel3.Data,value:scala.math.BigInt):Unit", "kind" : "def"}, {"label" : "peekClock", "tail" : "(signal: Clock): Boolean", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.peekClock", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#peekClock(signal:chisel3.Clock):Boolean", "kind" : "def"}, {"label" : "pokeClock", "tail" : "(signal: Clock, value: Boolean): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.pokeClock", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#pokeClock(signal:chisel3.Clock,value:Boolean):Unit", "kind" : "def"}, {"label" : "getModule", "tail" : "(): T", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.getModule", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#getModule:T", "kind" : "def"}, {"label" : "getSinkClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.getSinkClocks", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#getSinkClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "def"}, {"label" : "getSourceClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.getSourceClocks", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#getSourceClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "def"}, {"label" : "resolveName", "tail" : "(signal: Data): String", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.resolveName", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#resolveName(signal:chisel3.Data):String", "kind" : "def"}, {"label" : "debugLog", "tail" : "(str: ⇒ String): Unit", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.debugLog", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#debugLog(str:=>String):Unit", "kind" : "def"}, {"label" : "verbose", "tail" : ": Boolean", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.verbose", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#verbose:Boolean", "kind" : "val"}, {"member" : "chiseltest.legacy.backends.verilator.VerilatorBackend#<init>", "error" : "unsupported entity"}, {"label" : "combinationalPaths", "tail" : ": Map[Data, Set[Data]]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.combinationalPaths", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#combinationalPaths:Map[chisel3.Data,Set[chisel3.Data]]", "kind" : "val"}, {"label" : "dataNames", "tail" : ": Map[Data, String]", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.dataNames", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#dataNames:Map[chisel3.Data,String]", "kind" : "val"}, {"label" : "dut", "tail" : ": T", "member" : "chiseltest.legacy.backends.verilator.VerilatorBackend.dut", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#dut:T", "kind" : "val"}, {"label" : "getParentTraceElements", "tail" : "(): Seq[StackTraceElement]", "member" : "chiseltest.internal.ThreadedBackend.getParentTraceElements", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#getParentTraceElements:Seq[StackTraceElement]", "kind" : "def"}, {"label" : "doJoin", "tail" : "(threads: Seq[AbstractTesterThread], stepAfter: Option[Clock]): Unit", "member" : "chiseltest.internal.ThreadedBackend.doJoin", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#doJoin(threads:Seq[chiseltest.internal.AbstractTesterThread],stepAfter:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "doFork", "tail" : "(runnable: () ⇒ Unit, name: Option[String], region: Option[Region]): TesterThread", "member" : "chiseltest.internal.ThreadedBackend.doFork", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#doFork(runnable:()=>Unit,name:Option[String],region:Option[chiseltest.Region]):ThreadedBackend.this.TesterThread", "kind" : "def"}, {"label" : "threadFinished", "tail" : "(thread: TesterThread): Unit", "member" : "chiseltest.internal.ThreadedBackend.threadFinished", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#threadFinished(thread:ThreadedBackend.this.TesterThread):Unit", "kind" : "def"}, {"label" : "scheduler", "tail" : "(): Unit", "member" : "chiseltest.internal.ThreadedBackend.scheduler", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#scheduler():Unit", "kind" : "def"}, {"label" : "runThreads", "tail" : "(clocks: Set[Clock]): Unit", "member" : "chiseltest.internal.ThreadedBackend.runThreads", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#runThreads(clocks:Set[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "driverSemaphore", "tail" : ": Semaphore", "member" : "chiseltest.internal.ThreadedBackend.driverSemaphore", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#driverSemaphore:java.util.concurrent.Semaphore", "kind" : "val"}, {"label" : "currentThread", "tail" : ": Option[TesterThread]", "member" : "chiseltest.internal.ThreadedBackend.currentThread", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#currentThread:Option[ThreadedBackend.this.TesterThread]", "kind" : "val"}, {"label" : "interruptedException", "tail" : ": ConcurrentLinkedQueue[Throwable]", "member" : "chiseltest.internal.ThreadedBackend.interruptedException", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#interruptedException:java.util.concurrent.ConcurrentLinkedQueue[Throwable]", "kind" : "val"}, {"label" : "timestep", "tail" : "(): Unit", "member" : "chiseltest.internal.ThreadedBackend.timestep", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#timestep():Unit", "kind" : "def"}, {"label" : "closeTimescope", "tail" : "(timescope: Timescope): Map[Data, Option[BigInt]]", "member" : "chiseltest.internal.ThreadedBackend.closeTimescope", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#closeTimescope(timescope:ThreadedBackend.this.Timescope):Map[chisel3.Data,Option[BigInt]]", "kind" : "def"}, {"label" : "newTimescope", "tail" : "(): Timescope", "member" : "chiseltest.internal.ThreadedBackend.newTimescope", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#newTimescope():ThreadedBackend.this.Timescope", "kind" : "def"}, {"label" : "doPeek", "tail" : "(signal: Data, trace: Throwable): Unit", "member" : "chiseltest.internal.ThreadedBackend.doPeek", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#doPeek(signal:chisel3.Data,trace:Throwable):Unit", "kind" : "def"}, {"label" : "doPoke", "tail" : "(signal: Data, value: BigInt, trace: Throwable): Unit", "member" : "chiseltest.internal.ThreadedBackend.doPoke", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#doPoke(signal:chisel3.Data,value:BigInt,trace:Throwable):Unit", "kind" : "def"}, {"label" : "rootTimescope", "tail" : ": Option[RootTimescope]", "member" : "chiseltest.internal.ThreadedBackend.rootTimescope", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#rootTimescope:Option[ThreadedBackend.this.RootTimescope]", "kind" : "val"}, {"label" : "currentTime", "tail" : "(): TimeRegion", "member" : "chiseltest.internal.ThreadedBackend.currentTime", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#currentTime:ThreadedBackend.this.TimeRegion", "kind" : "def"}, {"label" : "currentTimestep", "tail" : ": Int", "member" : "chiseltest.internal.ThreadedBackend.currentTimestep", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#currentTimestep:Int", "kind" : "val"}, {"label" : "setTimeout", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.internal.ThreadedBackend.setTimeout", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#setTimeout(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "def"}, {"label" : "idleLimits", "tail" : ": Map[Clock, Int]", "member" : "chiseltest.internal.ThreadedBackend.idleLimits", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#idleLimits:scala.collection.mutable.Map[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "idleCycles", "tail" : ": Map[Clock, Int]", "member" : "chiseltest.internal.ThreadedBackend.idleCycles", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#idleCycles:scala.collection.mutable.Map[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "getVar", "tail" : "(key: Any): Option[Any]", "member" : "chiseltest.internal.BackendInterface.getVar", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#getVar(key:Any):Option[Any]", "kind" : "def"}, {"label" : "setVar", "tail" : "(key: Any, value: Any): Unit", "member" : "chiseltest.internal.BackendInterface.setVar", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#setVar(key:Any,value:Any):Unit", "kind" : "def"}, {"label" : "testMap", "tail" : ": HashMap[Any, Any]", "member" : "chiseltest.internal.BackendInterface.testMap", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#testMap:scala.collection.mutable.HashMap[Any,Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/legacy\/backends\/verilator\/VerilatorBackend.html", "kind" : "class"}, {"name" : "chiseltest.legacy.backends.verilator.VerilatorCFlags", "shortDescription" : "A sequence string flags to add to verilator command line", "object" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.legacy.backends.verilator.VerilatorCFlags.options", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "chiseltest.legacy.backends.verilator.VerilatorCFlags#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": Seq[String]", "member" : "chiseltest.legacy.backends.verilator.VerilatorCFlags.flags", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#flags:Seq[String]", "kind" : "val"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCFlags.html", "kind" : "case class"}, {"name" : "chiseltest.legacy.backends.verilator.VerilatorCppHarnessGenerator", "shortDescription" : "Generates the Module specific verilator harness cpp file for verilator compilation", "object" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html", "members_object" : [{"label" : "codeGen", "tail" : "(dut: MultiIOModule, vcdFilePath: String, targetDir: String): String", "member" : "chiseltest.legacy.backends.verilator.VerilatorCppHarnessGenerator.codeGen", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#codeGen(dut:chisel3.MultiIOModule,vcdFilePath:String,targetDir:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorCppHarnessGenerator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.legacy.backends.verilator.VerilatorExecutive", "shortDescription" : "", "object" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html", "members_object" : [{"label" : "start", "tail" : "(dutGen: () ⇒ T, annotationSeq: AnnotationSeq): BackendInstance[T]", "member" : "chiseltest.legacy.backends.verilator.VerilatorExecutive.start", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#start[T<:chisel3.MultiIOModule](dutGen:()=>T,annotationSeq:firrtl.AnnotationSeq):chiseltest.internal.BackendInstance[T]", "kind" : "def"}, {"label" : "componentToName", "tail" : "(component: ReferenceTarget): String", "member" : "chiseltest.legacy.backends.verilator.VerilatorExecutive.componentToName", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#componentToName(component:firrtl.annotations.ReferenceTarget):String", "kind" : "def"}, {"label" : "combinationalPathsToData", "tail" : "(dut: BaseModule, paths: Seq[CombinationalPath], dataNames: Map[Data, String], componentToName: (ReferenceTarget) ⇒ String): Map[Data, Set[Data]]", "member" : "chiseltest.backends.BackendExecutive.combinationalPathsToData", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#combinationalPathsToData(dut:chisel3.experimental.BaseModule,paths:Seq[firrtl.transforms.CombinationalPath],dataNames:Map[chisel3.Data,String],componentToName:firrtl.annotations.ReferenceTarget=>String):Map[chisel3.Data,Set[chisel3.Data]]", "kind" : "def"}, {"label" : "getDataNames", "tail" : "(name: String, data: Data): Seq[(Data, String)]", "member" : "chiseltest.backends.BackendExecutive.getDataNames", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#getDataNames(name:String,data:chisel3.Data):Seq[(chisel3.Data,String)]", "kind" : "def"}, {"label" : "getTopModule", "tail" : "(circuit: Circuit): BaseModule", "member" : "chiseltest.backends.BackendExecutive.getTopModule", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#getTopModule(circuit:chisel3.internal.firrtl.Circuit):chisel3.experimental.BaseModule", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorExecutive$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.legacy.backends.verilator.VerilatorFlags", "shortDescription" : "A sequence string flags to add to verilator command line", "object" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.legacy.backends.verilator.VerilatorFlags.options", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "chiseltest.legacy.backends.verilator.VerilatorFlags#<init>", "error" : "unsupported entity"}, {"label" : "flags", "tail" : ": Seq[String]", "member" : "chiseltest.legacy.backends.verilator.VerilatorFlags.flags", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#flags:Seq[String]", "kind" : "val"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chiseltest\/legacy\/backends\/verilator\/VerilatorFlags.html", "kind" : "case class"}, {"name" : "chiseltest.legacy.backends.verilator.VerilatorOption", "members_trait" : [{"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#serialize:String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOption.html", "kind" : "trait"}, {"name" : "chiseltest.legacy.backends.verilator.VerilatorOptionObject", "members_trait" : [{"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#serialize:String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "options", "tail" : "(): Seq[ShellOption[_]]", "member" : "firrtl.options.HasShellOptions.options", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "chiseltest\/legacy\/backends\/verilator\/VerilatorOptionObject.html", "kind" : "trait"}], "chiseltest.legacy" : [], "chiseltest.internal" : [{"name" : "chiseltest.internal.AbstractTesterThread", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/AbstractTesterThread.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/AbstractTesterThread.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/AbstractTesterThread.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/AbstractTesterThread.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/AbstractTesterThread.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/AbstractTesterThread.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/AbstractTesterThread.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/AbstractTesterThread.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/AbstractTesterThread.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/AbstractTesterThread.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/AbstractTesterThread.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/AbstractTesterThread.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/internal\/AbstractTesterThread.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/AbstractTesterThread.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/AbstractTesterThread.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/AbstractTesterThread.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/AbstractTesterThread.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/AbstractTesterThread.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/AbstractTesterThread.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "chiseltest\/internal\/AbstractTesterThread.html", "kind" : "trait"}, {"name" : "chiseltest.internal.BackendAnnotation", "members_trait" : [{"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/BackendAnnotation.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/BackendAnnotation.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/BackendAnnotation.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/BackendAnnotation.html#serialize:String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "chiseltest\/internal\/BackendAnnotation.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "chiseltest\/internal\/BackendAnnotation.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/BackendAnnotation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/BackendAnnotation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/BackendAnnotation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/BackendAnnotation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/BackendAnnotation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/BackendAnnotation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/BackendAnnotation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BackendAnnotation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BackendAnnotation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BackendAnnotation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/BackendAnnotation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/BackendAnnotation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/internal\/BackendAnnotation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/BackendAnnotation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/BackendAnnotation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/BackendAnnotation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/BackendAnnotation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/BackendAnnotation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/BackendAnnotation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "executive", "tail" : "(): BackendExecutive", "member" : "chiseltest.internal.BackendAnnotation.executive", "link" : "chiseltest\/internal\/BackendAnnotation.html#executive:chiseltest.backends.BackendExecutive", "kind" : "abstract def"}, {"label" : "options", "tail" : "(): Seq[ShellOption[_]]", "member" : "firrtl.options.HasShellOptions.options", "link" : "chiseltest\/internal\/BackendAnnotation.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "chiseltest\/internal\/BackendAnnotation.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "chiseltest\/internal\/BackendAnnotation.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "chiseltest\/internal\/BackendAnnotation.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "chiseltest\/internal\/BackendAnnotation.html", "kind" : "trait"}, {"name" : "chiseltest.internal.BackendInstance", "members_trait" : [{"label" : "getVar", "tail" : "(key: Any): Option[Any]", "member" : "chiseltest.internal.BackendInterface.getVar", "link" : "chiseltest\/internal\/BackendInstance.html#getVar(key:Any):Option[Any]", "kind" : "def"}, {"label" : "setVar", "tail" : "(key: Any, value: Any): Unit", "member" : "chiseltest.internal.BackendInterface.setVar", "link" : "chiseltest\/internal\/BackendInstance.html#setVar(key:Any,value:Any):Unit", "kind" : "def"}, {"label" : "testMap", "tail" : ": HashMap[Any, Any]", "member" : "chiseltest.internal.BackendInterface.testMap", "link" : "chiseltest\/internal\/BackendInstance.html#testMap:scala.collection.mutable.HashMap[Any,Any]", "kind" : "val"}, {"label" : "getParentTraceElements", "tail" : "(): Seq[StackTraceElement]", "member" : "chiseltest.internal.BackendInterface.getParentTraceElements", "link" : "chiseltest\/internal\/BackendInstance.html#getParentTraceElements:Seq[StackTraceElement]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/BackendInstance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/BackendInstance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/BackendInstance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/BackendInstance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/BackendInstance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/BackendInstance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/BackendInstance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BackendInstance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BackendInstance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BackendInstance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/BackendInstance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/BackendInstance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/internal\/BackendInstance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/BackendInstance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/BackendInstance.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/BackendInstance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/BackendInstance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/BackendInstance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/BackendInstance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(testFn: (T) ⇒ Unit): Unit", "member" : "chiseltest.internal.BackendInstance.run", "link" : "chiseltest\/internal\/BackendInstance.html#run(testFn:T=>Unit):Unit", "kind" : "abstract def"}, {"label" : "getSinkClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.internal.BackendInterface.getSinkClocks", "link" : "chiseltest\/internal\/BackendInstance.html#getSinkClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "abstract def"}, {"label" : "getSourceClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.internal.BackendInterface.getSourceClocks", "link" : "chiseltest\/internal\/BackendInstance.html#getSourceClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "abstract def"}, {"label" : "doTimescope", "tail" : "(contents: () ⇒ Unit): Unit", "member" : "chiseltest.internal.BackendInterface.doTimescope", "link" : "chiseltest\/internal\/BackendInstance.html#doTimescope(contents:()=>Unit):Unit", "kind" : "abstract def"}, {"label" : "doJoin", "tail" : "(threads: Seq[AbstractTesterThread], stepAfter: Option[Clock]): Unit", "member" : "chiseltest.internal.BackendInterface.doJoin", "link" : "chiseltest\/internal\/BackendInstance.html#doJoin(threads:Seq[chiseltest.internal.AbstractTesterThread],stepAfter:Option[chisel3.Clock]):Unit", "kind" : "abstract def"}, {"label" : "doFork", "tail" : "(runnable: () ⇒ Unit, name: Option[String], region: Option[Region]): AbstractTesterThread", "member" : "chiseltest.internal.BackendInterface.doFork", "link" : "chiseltest\/internal\/BackendInstance.html#doFork(runnable:()=>Unit,name:Option[String],region:Option[chiseltest.Region]):chiseltest.internal.AbstractTesterThread", "kind" : "abstract def"}, {"label" : "step", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.internal.BackendInterface.step", "link" : "chiseltest\/internal\/BackendInstance.html#step(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "abstract def"}, {"label" : "setTimeout", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.internal.BackendInterface.setTimeout", "link" : "chiseltest\/internal\/BackendInstance.html#setTimeout(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "abstract def"}, {"label" : "expectBits", "tail" : "(signal: Data, value: BigInt, message: Option[String], decode: Option[(BigInt) ⇒ String], stale: Boolean): Unit", "member" : "chiseltest.internal.BackendInterface.expectBits", "link" : "chiseltest\/internal\/BackendInstance.html#expectBits(signal:chisel3.Data,value:BigInt,message:Option[String],decode:Option[BigInt=>String],stale:Boolean):Unit", "kind" : "abstract def"}, {"label" : "peekBits", "tail" : "(signal: Data, stale: Boolean): BigInt", "member" : "chiseltest.internal.BackendInterface.peekBits", "link" : "chiseltest\/internal\/BackendInstance.html#peekBits(signal:chisel3.Data,stale:Boolean):BigInt", "kind" : "abstract def"}, {"label" : "pokeBits", "tail" : "(signal: Data, value: BigInt): Unit", "member" : "chiseltest.internal.BackendInterface.pokeBits", "link" : "chiseltest\/internal\/BackendInstance.html#pokeBits(signal:chisel3.Data,value:BigInt):Unit", "kind" : "abstract def"}, {"label" : "peekClock", "tail" : "(signal: Clock): Boolean", "member" : "chiseltest.internal.BackendInterface.peekClock", "link" : "chiseltest\/internal\/BackendInstance.html#peekClock(signal:chisel3.Clock):Boolean", "kind" : "abstract def"}, {"label" : "pokeClock", "tail" : "(signal: Clock, value: Boolean): Unit", "member" : "chiseltest.internal.BackendInterface.pokeClock", "link" : "chiseltest\/internal\/BackendInstance.html#pokeClock(signal:chisel3.Clock,value:Boolean):Unit", "kind" : "abstract def"}], "shortDescription" : "Backend associated with a particular circuit, and can run tests", "trait" : "chiseltest\/internal\/BackendInstance.html", "kind" : "trait"}, {"name" : "chiseltest.internal.BackendInterface", "members_trait" : [{"label" : "getVar", "tail" : "(key: Any): Option[Any]", "member" : "chiseltest.internal.BackendInterface.getVar", "link" : "chiseltest\/internal\/BackendInterface.html#getVar(key:Any):Option[Any]", "kind" : "def"}, {"label" : "setVar", "tail" : "(key: Any, value: Any): Unit", "member" : "chiseltest.internal.BackendInterface.setVar", "link" : "chiseltest\/internal\/BackendInterface.html#setVar(key:Any,value:Any):Unit", "kind" : "def"}, {"label" : "testMap", "tail" : ": HashMap[Any, Any]", "member" : "chiseltest.internal.BackendInterface.testMap", "link" : "chiseltest\/internal\/BackendInterface.html#testMap:scala.collection.mutable.HashMap[Any,Any]", "kind" : "val"}, {"label" : "getParentTraceElements", "tail" : "(): Seq[StackTraceElement]", "member" : "chiseltest.internal.BackendInterface.getParentTraceElements", "link" : "chiseltest\/internal\/BackendInterface.html#getParentTraceElements:Seq[StackTraceElement]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/BackendInterface.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/BackendInterface.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/BackendInterface.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/BackendInterface.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/BackendInterface.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/BackendInterface.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/BackendInterface.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BackendInterface.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BackendInterface.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BackendInterface.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/BackendInterface.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/BackendInterface.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/internal\/BackendInterface.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/BackendInterface.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/BackendInterface.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/BackendInterface.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/BackendInterface.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/BackendInterface.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/BackendInterface.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getSinkClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.internal.BackendInterface.getSinkClocks", "link" : "chiseltest\/internal\/BackendInterface.html#getSinkClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "abstract def"}, {"label" : "getSourceClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.internal.BackendInterface.getSourceClocks", "link" : "chiseltest\/internal\/BackendInterface.html#getSourceClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "abstract def"}, {"label" : "doTimescope", "tail" : "(contents: () ⇒ Unit): Unit", "member" : "chiseltest.internal.BackendInterface.doTimescope", "link" : "chiseltest\/internal\/BackendInterface.html#doTimescope(contents:()=>Unit):Unit", "kind" : "abstract def"}, {"label" : "doJoin", "tail" : "(threads: Seq[AbstractTesterThread], stepAfter: Option[Clock]): Unit", "member" : "chiseltest.internal.BackendInterface.doJoin", "link" : "chiseltest\/internal\/BackendInterface.html#doJoin(threads:Seq[chiseltest.internal.AbstractTesterThread],stepAfter:Option[chisel3.Clock]):Unit", "kind" : "abstract def"}, {"label" : "doFork", "tail" : "(runnable: () ⇒ Unit, name: Option[String], region: Option[Region]): AbstractTesterThread", "member" : "chiseltest.internal.BackendInterface.doFork", "link" : "chiseltest\/internal\/BackendInterface.html#doFork(runnable:()=>Unit,name:Option[String],region:Option[chiseltest.Region]):chiseltest.internal.AbstractTesterThread", "kind" : "abstract def"}, {"label" : "step", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.internal.BackendInterface.step", "link" : "chiseltest\/internal\/BackendInterface.html#step(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "abstract def"}, {"label" : "setTimeout", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.internal.BackendInterface.setTimeout", "link" : "chiseltest\/internal\/BackendInterface.html#setTimeout(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "abstract def"}, {"label" : "expectBits", "tail" : "(signal: Data, value: BigInt, message: Option[String], decode: Option[(BigInt) ⇒ String], stale: Boolean): Unit", "member" : "chiseltest.internal.BackendInterface.expectBits", "link" : "chiseltest\/internal\/BackendInterface.html#expectBits(signal:chisel3.Data,value:BigInt,message:Option[String],decode:Option[BigInt=>String],stale:Boolean):Unit", "kind" : "abstract def"}, {"label" : "peekBits", "tail" : "(signal: Data, stale: Boolean): BigInt", "member" : "chiseltest.internal.BackendInterface.peekBits", "link" : "chiseltest\/internal\/BackendInterface.html#peekBits(signal:chisel3.Data,stale:Boolean):BigInt", "kind" : "abstract def"}, {"label" : "pokeBits", "tail" : "(signal: Data, value: BigInt): Unit", "member" : "chiseltest.internal.BackendInterface.pokeBits", "link" : "chiseltest\/internal\/BackendInterface.html#pokeBits(signal:chisel3.Data,value:BigInt):Unit", "kind" : "abstract def"}, {"label" : "peekClock", "tail" : "(signal: Clock): Boolean", "member" : "chiseltest.internal.BackendInterface.peekClock", "link" : "chiseltest\/internal\/BackendInterface.html#peekClock(signal:chisel3.Clock):Boolean", "kind" : "abstract def"}, {"label" : "pokeClock", "tail" : "(signal: Clock, value: Boolean): Unit", "member" : "chiseltest.internal.BackendInterface.pokeClock", "link" : "chiseltest\/internal\/BackendInterface.html#pokeClock(signal:chisel3.Clock,value:Boolean):Unit", "kind" : "abstract def"}], "shortDescription" : "Common interface definition for tester backends.", "trait" : "chiseltest\/internal\/BackendInterface.html", "kind" : "trait"}, {"name" : "chiseltest.internal.BranchCoverageAnnotation", "shortDescription" : "", "object" : "chiseltest\/internal\/BranchCoverageAnnotation$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.internal.BranchCoverageAnnotation.options", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/BranchCoverageAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.internal.ConditionalCoverageAnnotation", "shortDescription" : "", "object" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.internal.ConditionalCoverageAnnotation.options", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/ConditionalCoverageAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.internal.Context", "shortDescription" : "", "object" : "chiseltest\/internal\/Context$.html", "members_object" : [{"label" : "apply", "tail" : "(): Instance", "member" : "chiseltest.internal.Context.apply", "link" : "chiseltest\/internal\/Context$.html#apply():chiseltest.internal.Context.Instance", "kind" : "def"}, {"label" : "run", "tail" : "(backend: BackendInstance[T], env: TestEnvInterface, testFn: (T) ⇒ Unit): Unit", "member" : "chiseltest.internal.Context.run", "link" : "chiseltest\/internal\/Context$.html#run[T<:chisel3.MultiIOModule](backend:chiseltest.internal.BackendInstance[T],env:chiseltest.internal.TestEnvInterface,testFn:T=>Unit):Unit", "kind" : "def"}, {"label" : "Instance", "tail" : "", "member" : "chiseltest.internal.Context.Instance", "link" : "chiseltest\/internal\/Context$.html#InstanceextendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/Context$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/Context$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/Context$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/Context$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/Context$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/Context$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/Context$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/Context$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/Context$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/Context$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/Context$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/Context$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/internal\/Context$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/Context$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/Context$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/Context$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/Context$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/Context$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/Context$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.internal.FailedExpectException", "shortDescription" : "", "members_class" : [{"member" : "chiseltest.internal.FailedExpectException#<init>", "error" : "unsupported entity"}, {"label" : "failedCodeStackDepth", "tail" : ": Int", "member" : "chiseltest.internal.FailedExpectException.failedCodeStackDepth", "link" : "chiseltest\/internal\/FailedExpectException.html#failedCodeStackDepth:Int", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "chiseltest.internal.FailedExpectException.message", "link" : "chiseltest\/internal\/FailedExpectException.html#message:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "chiseltest\/internal\/FailedExpectException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "chiseltest\/internal\/FailedExpectException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "chiseltest\/internal\/FailedExpectException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "chiseltest\/internal\/FailedExpectException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "chiseltest\/internal\/FailedExpectException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/internal\/FailedExpectException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/internal\/FailedExpectException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/internal\/FailedExpectException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "chiseltest\/internal\/FailedExpectException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "chiseltest\/internal\/FailedExpectException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "chiseltest\/internal\/FailedExpectException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "chiseltest\/internal\/FailedExpectException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "chiseltest\/internal\/FailedExpectException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/FailedExpectException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/FailedExpectException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/FailedExpectException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/FailedExpectException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/FailedExpectException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/FailedExpectException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/FailedExpectException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/FailedExpectException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/FailedExpectException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/FailedExpectException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/FailedExpectException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/FailedExpectException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/FailedExpectException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/FailedExpectException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/FailedExpectException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/FailedExpectException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/FailedExpectException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/FailedExpectException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/internal\/FailedExpectException.html", "kind" : "class"}, {"name" : "chiseltest.internal.ForkBuilder", "shortDescription" : "", "members_case class" : [{"label" : "withName", "tail" : "(newName: String): ForkBuilder", "member" : "chiseltest.internal.ForkBuilder.withName", "link" : "chiseltest\/internal\/ForkBuilder.html#withName(newName:String):chiseltest.internal.ForkBuilder", "kind" : "def"}, {"label" : "withRegion", "tail" : "(newRegion: Region): ForkBuilder", "member" : "chiseltest.internal.ForkBuilder.withRegion", "link" : "chiseltest\/internal\/ForkBuilder.html#withRegion(newRegion:chiseltest.Region):chiseltest.internal.ForkBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(runnable: ⇒ Unit): TesterThreadList", "member" : "chiseltest.internal.ForkBuilder.apply", "link" : "chiseltest\/internal\/ForkBuilder.html#apply(runnable:=>Unit):chiseltest.internal.TesterThreadList", "kind" : "def"}, {"member" : "chiseltest.internal.ForkBuilder#<init>", "error" : "unsupported entity"}, {"label" : "threads", "tail" : ": Seq[AbstractTesterThread]", "member" : "chiseltest.internal.ForkBuilder.threads", "link" : "chiseltest\/internal\/ForkBuilder.html#threads:Seq[chiseltest.internal.AbstractTesterThread]", "kind" : "val"}, {"label" : "region", "tail" : ": Option[Region]", "member" : "chiseltest.internal.ForkBuilder.region", "link" : "chiseltest\/internal\/ForkBuilder.html#region:Option[chiseltest.Region]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "chiseltest.internal.ForkBuilder.name", "link" : "chiseltest\/internal\/ForkBuilder.html#name:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/ForkBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/ForkBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/ForkBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/ForkBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/ForkBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/ForkBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/ForkBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ForkBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ForkBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ForkBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/ForkBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/ForkBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/ForkBuilder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/ForkBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/ForkBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/ForkBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chiseltest\/internal\/ForkBuilder.html", "kind" : "case class"}, {"name" : "chiseltest.internal.LineCoverageAnnotation", "shortDescription" : "", "object" : "chiseltest\/internal\/LineCoverageAnnotation$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.internal.LineCoverageAnnotation.options", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/LineCoverageAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.internal.StructuralCoverageAnnotation", "shortDescription" : "", "object" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.internal.StructuralCoverageAnnotation.options", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/StructuralCoverageAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.internal.TestEnvInterface", "members_trait" : [{"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "chiseltest\/internal\/TestEnvInterface.html#checkpoint():Unit", "kind" : "def"}, {"label" : "testerExpect", "tail" : "(expected: BigInt, actual: BigInt, signal: String, msg: Option[String], decode: Option[(BigInt) ⇒ String]): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerExpect", "link" : "chiseltest\/internal\/TestEnvInterface.html#testerExpect(expected:BigInt,actual:BigInt,signal:String,msg:Option[String],decode:Option[BigInt=>String]):Unit", "kind" : "def"}, {"label" : "bigintToHex", "tail" : "(x: BigInt): String", "member" : "chiseltest.internal.TestEnvInterface.bigintToHex", "link" : "chiseltest\/internal\/TestEnvInterface.html#bigintToHex(x:BigInt):String", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "chiseltest\/internal\/TestEnvInterface.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "chiseltest\/internal\/TestEnvInterface.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "addDefaultTargetDir", "tail" : "(defaultDir: String, annotationSeq: AnnotationSeq): AnnotationSeq", "member" : "chiseltest.internal.TestEnvInterface.addDefaultTargetDir", "link" : "chiseltest\/internal\/TestEnvInterface.html#addDefaultTargetDir(defaultDir:String,annotationSeq:firrtl.AnnotationSeq):firrtl.AnnotationSeq", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "chiseltest\/internal\/TestEnvInterface.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/TestEnvInterface.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/TestEnvInterface.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/TestEnvInterface.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/TestEnvInterface.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/TestEnvInterface.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/TestEnvInterface.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/TestEnvInterface.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TestEnvInterface.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TestEnvInterface.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TestEnvInterface.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/TestEnvInterface.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/TestEnvInterface.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/internal\/TestEnvInterface.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/TestEnvInterface.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/TestEnvInterface.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/TestEnvInterface.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/TestEnvInterface.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/TestEnvInterface.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/TestEnvInterface.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "topFileName", "tail" : "(): Option[String]", "member" : "chiseltest.internal.TestEnvInterface.topFileName", "link" : "chiseltest\/internal\/TestEnvInterface.html#topFileName:Option[String]", "kind" : "abstract def"}], "shortDescription" : "Interface into the testing environment, like ScalaTest", "trait" : "chiseltest\/internal\/TestEnvInterface.html", "kind" : "trait"}, {"name" : "chiseltest.internal.TesterOptions", "shortDescription" : "", "members_case class" : [{"label" : "toAnnotations", "tail" : "(): AnnotationSeq", "member" : "chiseltest.internal.TesterOptions.toAnnotations", "link" : "chiseltest\/internal\/TesterOptions.html#toAnnotations:firrtl.AnnotationSeq", "kind" : "def"}, {"member" : "chiseltest.internal.TesterOptions#<init>", "error" : "unsupported entity"}, {"label" : "writeVcd", "tail" : ": Boolean", "member" : "chiseltest.internal.TesterOptions.writeVcd", "link" : "chiseltest\/internal\/TesterOptions.html#writeVcd:Boolean", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "chiseltest.internal.TesterOptions.name", "link" : "chiseltest\/internal\/TesterOptions.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/TesterOptions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/TesterOptions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/TesterOptions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/TesterOptions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/TesterOptions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/TesterOptions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/TesterOptions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TesterOptions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TesterOptions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TesterOptions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/TesterOptions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/TesterOptions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/TesterOptions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/TesterOptions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/TesterOptions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/TesterOptions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chiseltest\/internal\/TesterOptions.html", "kind" : "case class"}, {"name" : "chiseltest.internal.TesterThreadList", "shortDescription" : "", "members_class" : [{"label" : "fork", "tail" : ": ForkBuilder", "member" : "chiseltest.internal.TesterThreadList.fork", "link" : "chiseltest\/internal\/TesterThreadList.html#fork:chiseltest.internal.ForkBuilder", "kind" : "val"}, {"label" : "++", "tail" : "(others: TesterThreadList): TesterThreadList", "member" : "chiseltest.internal.TesterThreadList.++", "link" : "chiseltest\/internal\/TesterThreadList.html#++(others:chiseltest.internal.TesterThreadList):chiseltest.internal.TesterThreadList", "kind" : "def"}, {"label" : "joinAndStep", "tail" : "(clock: Clock): Unit", "member" : "chiseltest.internal.TesterThreadList.joinAndStep", "link" : "chiseltest\/internal\/TesterThreadList.html#joinAndStep(clock:chisel3.Clock):Unit", "kind" : "def"}, {"label" : "join", "tail" : "(): Unit", "member" : "chiseltest.internal.TesterThreadList.join", "link" : "chiseltest\/internal\/TesterThreadList.html#join():Unit", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[AbstractTesterThread]", "member" : "chiseltest.internal.TesterThreadList.toSeq", "link" : "chiseltest\/internal\/TesterThreadList.html#toSeq():Seq[chiseltest.internal.AbstractTesterThread]", "kind" : "def"}, {"member" : "chiseltest.internal.TesterThreadList#<init>", "error" : "unsupported entity"}, {"label" : "elts", "tail" : ": Seq[AbstractTesterThread]", "member" : "chiseltest.internal.TesterThreadList.elts", "link" : "chiseltest\/internal\/TesterThreadList.html#elts:Seq[chiseltest.internal.AbstractTesterThread]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/TesterThreadList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/TesterThreadList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/TesterThreadList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/TesterThreadList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/TesterThreadList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/TesterThreadList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/TesterThreadList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TesterThreadList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TesterThreadList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TesterThreadList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/TesterThreadList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/TesterThreadList.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/internal\/TesterThreadList.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/TesterThreadList.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/TesterThreadList.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/TesterThreadList.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/TesterThreadList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/TesterThreadList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/TesterThreadList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/internal\/TesterThreadList.html", "kind" : "class"}, {"name" : "chiseltest.internal.TestOption", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/TestOption.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/TestOption.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/TestOption.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/TestOption.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/TestOption.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/TestOption.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/TestOption.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TestOption.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TestOption.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TestOption.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/TestOption.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/TestOption.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/internal\/TestOption.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/TestOption.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/TestOption.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/TestOption.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/TestOption.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/TestOption.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/TestOption.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "chiseltest\/internal\/TestOption.html", "kind" : "trait"}, {"name" : "chiseltest.internal.TestOptionObject", "members_trait" : [{"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/TestOptionObject.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/TestOptionObject.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/TestOptionObject.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/TestOptionObject.html#serialize:String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "chiseltest\/internal\/TestOptionObject.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "chiseltest\/internal\/TestOptionObject.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/TestOptionObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/TestOptionObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/TestOptionObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/TestOptionObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/TestOptionObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/TestOptionObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/TestOptionObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TestOptionObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TestOptionObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TestOptionObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/TestOptionObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/TestOptionObject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/internal\/TestOptionObject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/TestOptionObject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/TestOptionObject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/TestOptionObject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/TestOptionObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/TestOptionObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/TestOptionObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "options", "tail" : "(): Seq[ShellOption[_]]", "member" : "firrtl.options.HasShellOptions.options", "link" : "chiseltest\/internal\/TestOptionObject.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "chiseltest\/internal\/TestOptionObject.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "chiseltest\/internal\/TestOptionObject.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "chiseltest\/internal\/TestOptionObject.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "chiseltest\/internal\/TestOptionObject.html", "kind" : "trait"}, {"name" : "chiseltest.internal.ThreadedBackend", "members_trait" : [{"label" : "getParentTraceElements", "tail" : "(): Seq[StackTraceElement]", "member" : "chiseltest.internal.ThreadedBackend.getParentTraceElements", "link" : "chiseltest\/internal\/ThreadedBackend.html#getParentTraceElements:Seq[StackTraceElement]", "kind" : "def"}, {"label" : "doJoin", "tail" : "(threads: Seq[AbstractTesterThread], stepAfter: Option[Clock]): Unit", "member" : "chiseltest.internal.ThreadedBackend.doJoin", "link" : "chiseltest\/internal\/ThreadedBackend.html#doJoin(threads:Seq[chiseltest.internal.AbstractTesterThread],stepAfter:Option[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "doFork", "tail" : "(runnable: () ⇒ Unit, name: Option[String], region: Option[Region]): TesterThread", "member" : "chiseltest.internal.ThreadedBackend.doFork", "link" : "chiseltest\/internal\/ThreadedBackend.html#doFork(runnable:()=>Unit,name:Option[String],region:Option[chiseltest.Region]):ThreadedBackend.this.TesterThread", "kind" : "def"}, {"label" : "threadFinished", "tail" : "(thread: TesterThread): Unit", "member" : "chiseltest.internal.ThreadedBackend.threadFinished", "link" : "chiseltest\/internal\/ThreadedBackend.html#threadFinished(thread:ThreadedBackend.this.TesterThread):Unit", "kind" : "def"}, {"label" : "scheduler", "tail" : "(): Unit", "member" : "chiseltest.internal.ThreadedBackend.scheduler", "link" : "chiseltest\/internal\/ThreadedBackend.html#scheduler():Unit", "kind" : "def"}, {"label" : "runThreads", "tail" : "(clocks: Set[Clock]): Unit", "member" : "chiseltest.internal.ThreadedBackend.runThreads", "link" : "chiseltest\/internal\/ThreadedBackend.html#runThreads(clocks:Set[chisel3.Clock]):Unit", "kind" : "def"}, {"label" : "schedulerState", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.schedulerState", "link" : "chiseltest\/internal\/ThreadedBackend.html#schedulerState", "kind" : "object"}, {"label" : "driverSemaphore", "tail" : ": Semaphore", "member" : "chiseltest.internal.ThreadedBackend.driverSemaphore", "link" : "chiseltest\/internal\/ThreadedBackend.html#driverSemaphore:java.util.concurrent.Semaphore", "kind" : "val"}, {"label" : "currentThread", "tail" : ": Option[TesterThread]", "member" : "chiseltest.internal.ThreadedBackend.currentThread", "link" : "chiseltest\/internal\/ThreadedBackend.html#currentThread:Option[ThreadedBackend.this.TesterThread]", "kind" : "val"}, {"label" : "TesterThread", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TesterThread", "link" : "chiseltest\/internal\/ThreadedBackend.html#TesterThreadextendsAbstractTesterThread", "kind" : "class"}, {"label" : "interruptedException", "tail" : ": ConcurrentLinkedQueue[Throwable]", "member" : "chiseltest.internal.ThreadedBackend.interruptedException", "link" : "chiseltest\/internal\/ThreadedBackend.html#interruptedException:java.util.concurrent.ConcurrentLinkedQueue[Throwable]", "kind" : "val"}, {"label" : "timestep", "tail" : "(): Unit", "member" : "chiseltest.internal.ThreadedBackend.timestep", "link" : "chiseltest\/internal\/ThreadedBackend.html#timestep():Unit", "kind" : "def"}, {"label" : "closeTimescope", "tail" : "(timescope: Timescope): Map[Data, Option[BigInt]]", "member" : "chiseltest.internal.ThreadedBackend.closeTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#closeTimescope(timescope:ThreadedBackend.this.Timescope):Map[chisel3.Data,Option[BigInt]]", "kind" : "def"}, {"label" : "newTimescope", "tail" : "(): Timescope", "member" : "chiseltest.internal.ThreadedBackend.newTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#newTimescope():ThreadedBackend.this.Timescope", "kind" : "def"}, {"label" : "doPeek", "tail" : "(signal: Data, trace: Throwable): Unit", "member" : "chiseltest.internal.ThreadedBackend.doPeek", "link" : "chiseltest\/internal\/ThreadedBackend.html#doPeek(signal:chisel3.Data,trace:Throwable):Unit", "kind" : "def"}, {"label" : "doPoke", "tail" : "(signal: Data, value: BigInt, trace: Throwable): Unit", "member" : "chiseltest.internal.ThreadedBackend.doPoke", "link" : "chiseltest\/internal\/ThreadedBackend.html#doPoke(signal:chisel3.Data,value:BigInt,trace:Throwable):Unit", "kind" : "def"}, {"label" : "PeekRecord", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.PeekRecord", "link" : "chiseltest\/internal\/ThreadedBackend.html#PeekRecordextendsProductwithSerializable", "kind" : "case class"}, {"label" : "TimescopeUtils", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TimescopeUtils", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimescopeUtils", "kind" : "object"}, {"label" : "Timescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.Timescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasOverridingPokeswithThreadedBackend.this.HasParent", "kind" : "class"}, {"label" : "PokeRecord", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.PokeRecord", "link" : "chiseltest\/internal\/ThreadedBackend.html#PokeRecordextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ThreadRootTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.ThreadRootTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#ThreadRootTimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasParentwithProductwithSerializable", "kind" : "case class"}, {"label" : "rootTimescope", "tail" : ": Option[RootTimescope]", "member" : "chiseltest.internal.ThreadedBackend.rootTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#rootTimescope:Option[ThreadedBackend.this.RootTimescope]", "kind" : "val"}, {"label" : "RootTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.RootTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#RootTimescopeextendsThreadedBackend.this.BaseTimescopewithThreadedBackend.this.HasOverridingPokes", "kind" : "class"}, {"label" : "HasParent", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.HasParent", "link" : "chiseltest\/internal\/ThreadedBackend.html#HasParentextendsThreadedBackend.this.BaseTimescope", "kind" : "sealed trait"}, {"label" : "HasOverridingPokes", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.HasOverridingPokes", "link" : "chiseltest\/internal\/ThreadedBackend.html#HasOverridingPokesextendsThreadedBackend.this.BaseTimescope", "kind" : "sealed trait"}, {"label" : "BaseTimescope", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.BaseTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#BaseTimescopeextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "currentTime", "tail" : "(): TimeRegion", "member" : "chiseltest.internal.ThreadedBackend.currentTime", "link" : "chiseltest\/internal\/ThreadedBackend.html#currentTime:ThreadedBackend.this.TimeRegion", "kind" : "def"}, {"label" : "TimeRegion", "tail" : "", "member" : "chiseltest.internal.ThreadedBackend.TimeRegion", "link" : "chiseltest\/internal\/ThreadedBackend.html#TimeRegionextendsProductwithSerializable", "kind" : "case class"}, {"label" : "currentTimestep", "tail" : ": Int", "member" : "chiseltest.internal.ThreadedBackend.currentTimestep", "link" : "chiseltest\/internal\/ThreadedBackend.html#currentTimestep:Int", "kind" : "val"}, {"label" : "setTimeout", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.internal.ThreadedBackend.setTimeout", "link" : "chiseltest\/internal\/ThreadedBackend.html#setTimeout(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "def"}, {"label" : "idleLimits", "tail" : ": Map[Clock, Int]", "member" : "chiseltest.internal.ThreadedBackend.idleLimits", "link" : "chiseltest\/internal\/ThreadedBackend.html#idleLimits:scala.collection.mutable.Map[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "idleCycles", "tail" : ": Map[Clock, Int]", "member" : "chiseltest.internal.ThreadedBackend.idleCycles", "link" : "chiseltest\/internal\/ThreadedBackend.html#idleCycles:scala.collection.mutable.Map[chisel3.Clock,Int]", "kind" : "val"}, {"label" : "getVar", "tail" : "(key: Any): Option[Any]", "member" : "chiseltest.internal.BackendInterface.getVar", "link" : "chiseltest\/internal\/ThreadedBackend.html#getVar(key:Any):Option[Any]", "kind" : "def"}, {"label" : "setVar", "tail" : "(key: Any, value: Any): Unit", "member" : "chiseltest.internal.BackendInterface.setVar", "link" : "chiseltest\/internal\/ThreadedBackend.html#setVar(key:Any,value:Any):Unit", "kind" : "def"}, {"label" : "testMap", "tail" : ": HashMap[Any, Any]", "member" : "chiseltest.internal.BackendInterface.testMap", "link" : "chiseltest\/internal\/ThreadedBackend.html#testMap:scala.collection.mutable.HashMap[Any,Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/ThreadedBackend.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/ThreadedBackend.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/ThreadedBackend.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/ThreadedBackend.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/ThreadedBackend.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/ThreadedBackend.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/ThreadedBackend.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ThreadedBackend.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ThreadedBackend.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ThreadedBackend.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/ThreadedBackend.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/ThreadedBackend.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/internal\/ThreadedBackend.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/ThreadedBackend.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/ThreadedBackend.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/internal\/ThreadedBackend.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/ThreadedBackend.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/ThreadedBackend.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/ThreadedBackend.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "combinationalPaths", "tail" : ": Map[Data, Set[Data]]", "member" : "chiseltest.internal.ThreadedBackend.combinationalPaths", "link" : "chiseltest\/internal\/ThreadedBackend.html#combinationalPaths:Map[chisel3.Data,Set[chisel3.Data]]", "kind" : "abstract val"}, {"label" : "dut", "tail" : "(): T", "member" : "chiseltest.internal.ThreadedBackend.dut", "link" : "chiseltest\/internal\/ThreadedBackend.html#dut:T", "kind" : "abstract def"}, {"label" : "getSinkClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.internal.BackendInterface.getSinkClocks", "link" : "chiseltest\/internal\/ThreadedBackend.html#getSinkClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "abstract def"}, {"label" : "getSourceClocks", "tail" : "(signal: Data): Set[Clock]", "member" : "chiseltest.internal.BackendInterface.getSourceClocks", "link" : "chiseltest\/internal\/ThreadedBackend.html#getSourceClocks(signal:chisel3.Data):Set[chisel3.Clock]", "kind" : "abstract def"}, {"label" : "doTimescope", "tail" : "(contents: () ⇒ Unit): Unit", "member" : "chiseltest.internal.BackendInterface.doTimescope", "link" : "chiseltest\/internal\/ThreadedBackend.html#doTimescope(contents:()=>Unit):Unit", "kind" : "abstract def"}, {"label" : "step", "tail" : "(signal: Clock, cycles: Int): Unit", "member" : "chiseltest.internal.BackendInterface.step", "link" : "chiseltest\/internal\/ThreadedBackend.html#step(signal:chisel3.Clock,cycles:Int):Unit", "kind" : "abstract def"}, {"label" : "expectBits", "tail" : "(signal: Data, value: BigInt, message: Option[String], decode: Option[(BigInt) ⇒ String], stale: Boolean): Unit", "member" : "chiseltest.internal.BackendInterface.expectBits", "link" : "chiseltest\/internal\/ThreadedBackend.html#expectBits(signal:chisel3.Data,value:BigInt,message:Option[String],decode:Option[BigInt=>String],stale:Boolean):Unit", "kind" : "abstract def"}, {"label" : "peekBits", "tail" : "(signal: Data, stale: Boolean): BigInt", "member" : "chiseltest.internal.BackendInterface.peekBits", "link" : "chiseltest\/internal\/ThreadedBackend.html#peekBits(signal:chisel3.Data,stale:Boolean):BigInt", "kind" : "abstract def"}, {"label" : "pokeBits", "tail" : "(signal: Data, value: BigInt): Unit", "member" : "chiseltest.internal.BackendInterface.pokeBits", "link" : "chiseltest\/internal\/ThreadedBackend.html#pokeBits(signal:chisel3.Data,value:BigInt):Unit", "kind" : "abstract def"}, {"label" : "peekClock", "tail" : "(signal: Clock): Boolean", "member" : "chiseltest.internal.BackendInterface.peekClock", "link" : "chiseltest\/internal\/ThreadedBackend.html#peekClock(signal:chisel3.Clock):Boolean", "kind" : "abstract def"}, {"label" : "pokeClock", "tail" : "(signal: Clock, value: Boolean): Unit", "member" : "chiseltest.internal.BackendInterface.pokeClock", "link" : "chiseltest\/internal\/ThreadedBackend.html#pokeClock(signal:chisel3.Clock,value:Boolean):Unit", "kind" : "abstract def"}], "shortDescription" : "Base trait for backends implementing concurrency by threading.", "trait" : "chiseltest\/internal\/ThreadedBackend.html", "kind" : "trait"}, {"name" : "chiseltest.internal.ToggleCoverageAnnotation", "shortDescription" : "", "object" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.internal.ToggleCoverageAnnotation.options", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/ToggleCoverageAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.internal.TreadleBackendAnnotation", "shortDescription" : "", "object" : "chiseltest\/internal\/TreadleBackendAnnotation$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.internal.TreadleBackendAnnotation.options", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "executive", "tail" : ": BackendExecutive", "member" : "chiseltest.internal.TreadleBackendAnnotation.executive", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#executive:chiseltest.backends.BackendExecutive", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/TreadleBackendAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.internal.UserCoverageAnnotation", "shortDescription" : "", "object" : "chiseltest\/internal\/UserCoverageAnnotation$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.internal.UserCoverageAnnotation.options", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/UserCoverageAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.internal.VcsBackendAnnotation", "shortDescription" : "", "object" : "chiseltest\/internal\/VcsBackendAnnotation$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.internal.VcsBackendAnnotation.options", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "executive", "tail" : ": BackendExecutive", "member" : "chiseltest.internal.VcsBackendAnnotation.executive", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#executive:chiseltest.backends.BackendExecutive", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/VcsBackendAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.internal.VerilatorBackendAnnotation", "shortDescription" : "", "object" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.internal.VerilatorBackendAnnotation.options", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "executive", "tail" : ": BackendExecutive", "member" : "chiseltest.internal.VerilatorBackendAnnotation.executive", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#executive:chiseltest.backends.BackendExecutive", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/VerilatorBackendAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.internal.WriteVcdAnnotation", "shortDescription" : "", "object" : "chiseltest\/internal\/WriteVcdAnnotation$.html", "members_object" : [{"label" : "options", "tail" : ": Seq[ShellOption[_]]", "member" : "chiseltest.internal.WriteVcdAnnotation.options", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#options:Seq[firrtl.options.ShellOption[_]]", "kind" : "val"}, {"label" : "addOptions", "tail" : "(p: OptionParser[AnnotationSeq]): Unit", "member" : "firrtl.options.HasShellOptions.addOptions", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#addOptions(p:scopt.OptionParser[firrtl.AnnotationSeq]):Unit", "kind" : "final def"}, {"label" : "update", "tail" : "(renames: RenameMap): Seq[NoTargetAnnotation]", "member" : "firrtl.annotations.NoTargetAnnotation.update", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#update(renames:firrtl.RenameMap):Seq[firrtl.annotations.NoTargetAnnotation]", "kind" : "def"}, {"label" : "getTargets", "tail" : "(): Seq[Target]", "member" : "firrtl.annotations.Annotation.getTargets", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#getTargets:Seq[firrtl.annotations.Target]", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "firrtl.annotations.Annotation.serialize", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#serialize:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/internal\/WriteVcdAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "chiseltest" : [{"name" : "chiseltest.ChiselScalatestTester", "members_trait" : [{"label" : "AssertionsHelper", "tail" : "", "member" : "org.scalatest.Assertions.AssertionsHelper", "link" : "chiseltest\/ChiselScalatestTester.html#AssertionsHelperextendsAnyRef", "kind" : "class"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "chiseltest\/ChiselScalatestTester.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "chiseltest\/ChiselScalatestTester.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "test", "tail" : "(dutGen: ⇒ T): (ChiselScalatestTester.this)#TestBuilder[T]", "member" : "chiseltest.ChiselScalatestTester.test", "link" : "chiseltest\/ChiselScalatestTester.html#test[T<:chisel3.MultiIOModule](dutGen:=>T):ChiselScalatestTester.this.TestBuilder[T]", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselScalatestTester.topFileName", "link" : "chiseltest\/ChiselScalatestTester.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "withFixture", "tail" : "(test: (ChiselScalatestTester.this)#NoArgTest): Outcome", "member" : "chiseltest.ChiselScalatestTester.withFixture", "link" : "chiseltest\/ChiselScalatestTester.html#withFixture(test:ChiselScalatestTester.this.NoArgTest):org.scalatest.Outcome", "kind" : "def"}, {"label" : "scalaTestContext", "tail" : ": DynamicVariable[Option[(ChiselScalatestTester.this)#NoArgTest]]", "member" : "chiseltest.ChiselScalatestTester.scalaTestContext", "link" : "chiseltest\/ChiselScalatestTester.html#scalaTestContext:scala.util.DynamicVariable[Option[ChiselScalatestTester.this.NoArgTest]]", "kind" : "val"}, {"label" : "TestBuilder", "tail" : "", "member" : "chiseltest.ChiselScalatestTester.TestBuilder", "link" : "chiseltest\/ChiselScalatestTester.html#TestBuilder[T<:chisel3.MultiIOModule]extendsAnyRef", "kind" : "class"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "chiseltest\/ChiselScalatestTester.html#checkpoint():Unit", "kind" : "def"}, {"label" : "testerExpect", "tail" : "(expected: BigInt, actual: BigInt, signal: String, msg: Option[String], decode: Option[(BigInt) ⇒ String]): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerExpect", "link" : "chiseltest\/ChiselScalatestTester.html#testerExpect(expected:BigInt,actual:BigInt,signal:String,msg:Option[String],decode:Option[BigInt=>String]):Unit", "kind" : "def"}, {"label" : "bigintToHex", "tail" : "(x: BigInt): String", "member" : "chiseltest.internal.TestEnvInterface.bigintToHex", "link" : "chiseltest\/ChiselScalatestTester.html#bigintToHex(x:BigInt):String", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "chiseltest\/ChiselScalatestTester.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "chiseltest\/ChiselScalatestTester.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "addDefaultTargetDir", "tail" : "(defaultDir: String, annotationSeq: AnnotationSeq): AnnotationSeq", "member" : "chiseltest.internal.TestEnvInterface.addDefaultTargetDir", "link" : "chiseltest\/ChiselScalatestTester.html#addDefaultTargetDir(defaultDir:String,annotationSeq:firrtl.AnnotationSeq):firrtl.AnnotationSeq", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "chiseltest\/ChiselScalatestTester.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "chiseltest\/ChiselScalatestTester.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: ⇒ Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "chiseltest\/ChiselScalatestTester.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "chiseltest\/ChiselScalatestTester.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: ⇒ T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "chiseltest\/ChiselScalatestTester.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "chiseltest\/ChiselScalatestTester.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "chiseltest\/ChiselScalatestTester.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "chiseltest\/ChiselScalatestTester.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "chiseltest\/ChiselScalatestTester.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "chiseltest\/ChiselScalatestTester.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "chiseltest\/ChiselScalatestTester.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "chiseltest\/ChiselScalatestTester.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "chiseltest\/ChiselScalatestTester.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "chiseltest\/ChiselScalatestTester.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "chiseltest\/ChiselScalatestTester.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "trap", "tail" : "(f: ⇒ T): Throwable", "member" : "org.scalatest.Assertions.trap", "link" : "chiseltest\/ChiselScalatestTester.html#trap[T](f:=>T):Throwable", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "chiseltest\/ChiselScalatestTester.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "chiseltest\/ChiselScalatestTester.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "chiseltest\/ChiselScalatestTester.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "chiseltest\/ChiselScalatestTester.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "chiseltest\/ChiselScalatestTester.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "chiseltest\/ChiselScalatestTester.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "chiseltest\/ChiselScalatestTester.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "chiseltest\/ChiselScalatestTester.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertionsHelper", "tail" : ": (ChiselScalatestTester.this)#AssertionsHelper", "member" : "org.scalatest.Assertions.assertionsHelper", "link" : "chiseltest\/ChiselScalatestTester.html#assertionsHelper:Assertions.this.AssertionsHelper", "kind" : "val"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "chiseltest\/ChiselScalatestTester.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "chiseltest\/ChiselScalatestTester.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "chiseltest\/ChiselScalatestTester.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "chiseltest\/ChiselScalatestTester.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "chiseltest\/ChiselScalatestTester.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "chiseltest\/ChiselScalatestTester.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "chiseltest\/ChiselScalatestTester.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "chiseltest\/ChiselScalatestTester.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "chiseltest\/ChiselScalatestTester.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "chiseltest\/ChiselScalatestTester.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): (ChiselScalatestTester.this)#CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "chiseltest\/ChiselScalatestTester.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): (ChiselScalatestTester.this)#Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "chiseltest\/ChiselScalatestTester.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "chiseltest\/ChiselScalatestTester.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "chiseltest\/ChiselScalatestTester.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "chiseltest\/ChiselScalatestTester.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "chiseltest\/ChiselScalatestTester.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "chiseltest\/ChiselScalatestTester.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "chiseltest\/ChiselScalatestTester.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "chiseltest\/ChiselScalatestTester.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/ChiselScalatestTester.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/ChiselScalatestTester.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/ChiselScalatestTester.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/ChiselScalatestTester.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/ChiselScalatestTester.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/ChiselScalatestTester.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/ChiselScalatestTester.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ChiselScalatestTester.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ChiselScalatestTester.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ChiselScalatestTester.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/ChiselScalatestTester.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/ChiselScalatestTester.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/ChiselScalatestTester.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/ChiselScalatestTester.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/ChiselScalatestTester.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/ChiselScalatestTester.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/ChiselScalatestTester.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/ChiselScalatestTester.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/ChiselScalatestTester.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "styleName", "tail" : ": String", "member" : "org.scalatest.SuiteMixin.styleName", "link" : "chiseltest\/ChiselScalatestTester.html#styleName:String", "kind" : "abstract val"}, {"label" : "rerunner", "tail" : "(): Option[String]", "member" : "org.scalatest.SuiteMixin.rerunner", "link" : "chiseltest\/ChiselScalatestTester.html#rerunner:Option[String]", "kind" : "abstract def"}, {"label" : "expectedTestCount", "tail" : "(filter: Filter): Int", "member" : "org.scalatest.SuiteMixin.expectedTestCount", "link" : "chiseltest\/ChiselScalatestTester.html#expectedTestCount(filter:org.scalatest.Filter):Int", "kind" : "abstract def"}, {"label" : "tags", "tail" : "(): Map[String, Set[String]]", "member" : "org.scalatest.SuiteMixin.tags", "link" : "chiseltest\/ChiselScalatestTester.html#tags:Map[String,Set[String]]", "kind" : "abstract def"}, {"label" : "nestedSuites", "tail" : "(): IndexedSeq[Suite]", "member" : "org.scalatest.SuiteMixin.nestedSuites", "link" : "chiseltest\/ChiselScalatestTester.html#nestedSuites:scala.collection.immutable.IndexedSeq[org.scalatest.Suite]", "kind" : "abstract def"}, {"label" : "testNames", "tail" : "(): Set[String]", "member" : "org.scalatest.SuiteMixin.testNames", "link" : "chiseltest\/ChiselScalatestTester.html#testNames:Set[String]", "kind" : "abstract def"}, {"label" : "testDataFor", "tail" : "(testName: String, theConfigMap: ConfigMap): TestData", "member" : "org.scalatest.SuiteMixin.testDataFor", "link" : "chiseltest\/ChiselScalatestTester.html#testDataFor(testName:String,theConfigMap:org.scalatest.ConfigMap):org.scalatest.TestData", "kind" : "abstract def"}, {"label" : "suiteId", "tail" : "(): String", "member" : "org.scalatest.SuiteMixin.suiteId", "link" : "chiseltest\/ChiselScalatestTester.html#suiteId:String", "kind" : "abstract def"}, {"label" : "suiteName", "tail" : "(): String", "member" : "org.scalatest.SuiteMixin.suiteName", "link" : "chiseltest\/ChiselScalatestTester.html#suiteName:String", "kind" : "abstract def"}, {"label" : "runTest", "tail" : "(testName: String, args: Args): Status", "member" : "org.scalatest.SuiteMixin.runTest", "link" : "chiseltest\/ChiselScalatestTester.html#runTest(testName:String,args:org.scalatest.Args):org.scalatest.Status", "kind" : "abstract def"}, {"label" : "runTests", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.SuiteMixin.runTests", "link" : "chiseltest\/ChiselScalatestTester.html#runTests(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "abstract def"}, {"label" : "runNestedSuites", "tail" : "(args: Args): Status", "member" : "org.scalatest.SuiteMixin.runNestedSuites", "link" : "chiseltest\/ChiselScalatestTester.html#runNestedSuites(args:org.scalatest.Args):org.scalatest.Status", "kind" : "abstract def"}, {"label" : "run", "tail" : "(testName: Option[String], args: Args): Status", "member" : "org.scalatest.SuiteMixin.run", "link" : "chiseltest\/ChiselScalatestTester.html#run(testName:Option[String],args:org.scalatest.Args):org.scalatest.Status", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "chiseltest\/ChiselScalatestTester.html", "kind" : "trait"}, {"name" : "chiseltest.ChiselUtestTester", "members_trait" : [{"label" : "testCircuit", "tail" : "(dutGen: ⇒ T, annotationSeq: AnnotationSeq)(testFn: (T) ⇒ Unit)(testPath: TestPath): Unit", "member" : "chiseltest.ChiselUtestTester.testCircuit", "link" : "chiseltest\/ChiselUtestTester.html#testCircuit[T<:chisel3.MultiIOModule](dutGen:=>T,annotationSeq:firrtl.AnnotationSeq)(testFn:T=>Unit)(implicittestPath:utest.framework.TestPath):Unit", "kind" : "def"}, {"label" : "utestFormatter", "tail" : "(): Formatter", "member" : "chiseltest.ChiselUtestTester.utestFormatter", "link" : "chiseltest\/ChiselUtestTester.html#utestFormatter:utest.framework.Formatter", "kind" : "def"}, {"label" : "topFileName", "tail" : ": Option[String]", "member" : "chiseltest.ChiselUtestTester.topFileName", "link" : "chiseltest\/ChiselUtestTester.html#topFileName:Option[String]", "kind" : "val"}, {"label" : "checkpoint", "tail" : "(): Unit", "member" : "chiseltest.internal.TestEnvInterface.checkpoint", "link" : "chiseltest\/ChiselUtestTester.html#checkpoint():Unit", "kind" : "def"}, {"label" : "testerExpect", "tail" : "(expected: BigInt, actual: BigInt, signal: String, msg: Option[String], decode: Option[(BigInt) ⇒ String]): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerExpect", "link" : "chiseltest\/ChiselUtestTester.html#testerExpect(expected:BigInt,actual:BigInt,signal:String,msg:Option[String],decode:Option[BigInt=>String]):Unit", "kind" : "def"}, {"label" : "bigintToHex", "tail" : "(x: BigInt): String", "member" : "chiseltest.internal.TestEnvInterface.bigintToHex", "link" : "chiseltest\/ChiselUtestTester.html#bigintToHex(x:BigInt):String", "kind" : "def"}, {"label" : "getExpectDetailedTrace", "tail" : "(trace: Seq[StackTraceElement], inFile: String): String", "member" : "chiseltest.internal.TestEnvInterface.getExpectDetailedTrace", "link" : "chiseltest\/ChiselUtestTester.html#getExpectDetailedTrace(trace:Seq[StackTraceElement],inFile:String):String", "kind" : "def"}, {"label" : "testerFail", "tail" : "(msg: String): Unit", "member" : "chiseltest.internal.TestEnvInterface.testerFail", "link" : "chiseltest\/ChiselUtestTester.html#testerFail(msg:String):Unit", "kind" : "def"}, {"label" : "addDefaultTargetDir", "tail" : "(defaultDir: String, annotationSeq: AnnotationSeq): AnnotationSeq", "member" : "chiseltest.internal.TestEnvInterface.addDefaultTargetDir", "link" : "chiseltest\/ChiselUtestTester.html#addDefaultTargetDir(defaultDir:String,annotationSeq:firrtl.AnnotationSeq):firrtl.AnnotationSeq", "kind" : "def"}, {"label" : "batchedFailures", "tail" : ": ArrayBuffer[Exception]", "member" : "chiseltest.internal.TestEnvInterface.batchedFailures", "link" : "chiseltest\/ChiselUtestTester.html#batchedFailures:scala.collection.mutable.ArrayBuffer[Exception]", "kind" : "val"}, {"label" : "apply", "tail" : "(expr: Unit): Tests", "member" : "utest.TestSuite.apply", "link" : "chiseltest\/ChiselUtestTester.html#apply(expr:Unit):utest.Tests", "kind" : "macro def"}, {"label" : "utestWrap", "tail" : "(path: Seq[String], runBody: ⇒ Future[Any])(ec: ExecutionContext): Future[Any]", "member" : "utest.framework.Executor.utestWrap", "link" : "chiseltest\/ChiselUtestTester.html#utestWrap(path:Seq[String],runBody:=>scala.concurrent.Future[Any])(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[Any]", "kind" : "def"}, {"label" : "utestAfterAll", "tail" : "(): Unit", "member" : "utest.framework.Executor.utestAfterAll", "link" : "chiseltest\/ChiselUtestTester.html#utestAfterAll():Unit", "kind" : "def"}, {"label" : "utestAfterEach", "tail" : "(path: Seq[String]): Unit", "member" : "utest.framework.Executor.utestAfterEach", "link" : "chiseltest\/ChiselUtestTester.html#utestAfterEach(path:Seq[String]):Unit", "kind" : "def"}, {"label" : "utestBeforeEach", "tail" : "(path: Seq[String]): Unit", "member" : "utest.framework.Executor.utestBeforeEach", "link" : "chiseltest\/ChiselUtestTester.html#utestBeforeEach(path:Seq[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/ChiselUtestTester.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/ChiselUtestTester.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/ChiselUtestTester.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/ChiselUtestTester.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/ChiselUtestTester.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/ChiselUtestTester.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/ChiselUtestTester.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ChiselUtestTester.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ChiselUtestTester.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ChiselUtestTester.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/ChiselUtestTester.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/ChiselUtestTester.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/ChiselUtestTester.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/ChiselUtestTester.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/ChiselUtestTester.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/ChiselUtestTester.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/ChiselUtestTester.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/ChiselUtestTester.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/ChiselUtestTester.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "tests", "tail" : "(): Tests", "member" : "utest.TestSuite.tests", "link" : "chiseltest\/ChiselUtestTester.html#tests:utest.Tests", "kind" : "abstract def"}], "shortDescription" : "Using utest as test framework", "trait" : "chiseltest\/ChiselUtestTester.html", "kind" : "trait"}, {"name" : "chiseltest.ClockResolutionException", "shortDescription" : "", "members_class" : [{"member" : "chiseltest.ClockResolutionException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "chiseltest\/ClockResolutionException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "chiseltest\/ClockResolutionException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "chiseltest\/ClockResolutionException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "chiseltest\/ClockResolutionException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "chiseltest\/ClockResolutionException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/ClockResolutionException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/ClockResolutionException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/ClockResolutionException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "chiseltest\/ClockResolutionException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "chiseltest\/ClockResolutionException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "chiseltest\/ClockResolutionException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "chiseltest\/ClockResolutionException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "chiseltest\/ClockResolutionException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/ClockResolutionException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/ClockResolutionException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/ClockResolutionException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/ClockResolutionException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/ClockResolutionException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/ClockResolutionException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/ClockResolutionException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ClockResolutionException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ClockResolutionException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ClockResolutionException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/ClockResolutionException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/ClockResolutionException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/ClockResolutionException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/ClockResolutionException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/ClockResolutionException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/ClockResolutionException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/ClockResolutionException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/ClockResolutionException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/ClockResolutionException.html", "kind" : "class"}, {"name" : "chiseltest.ClockResolutionUtils", "shortDescription" : "Provides clock-resolution-specific abstractions on top of getVar\/setVar.", "object" : "chiseltest\/package$$ClockResolutionUtils$.html", "members_object" : [{"label" : "getClock", "tail" : "(driverKey: Any, wire: Data, defaultClock: ⇒ Clock): Clock", "member" : "chiseltest.ClockResolutionUtils.getClock", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#getClock(driverKey:Any,wire:chisel3.Data,defaultClock:=>chisel3.Clock):chisel3.Clock", "kind" : "def"}, {"label" : "setClock", "tail" : "(driverKey: Any, wire: Data, clock: Clock): Unit", "member" : "chiseltest.ClockResolutionUtils.setClock", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#setClock(driverKey:Any,wire:chisel3.Data,clock:chisel3.Clock):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/package$$ClockResolutionUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/package$$ClockResolutionUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.DecoupledDriver", "shortDescription" : "", "object" : "chiseltest\/DecoupledDriver$.html", "members_class" : [{"label" : "expectInvalid", "tail" : "(): Unit", "member" : "chiseltest.DecoupledDriver.expectInvalid", "link" : "chiseltest\/DecoupledDriver.html#expectInvalid():Unit", "kind" : "def"}, {"label" : "expectPeek", "tail" : "(data: T): Unit", "member" : "chiseltest.DecoupledDriver.expectPeek", "link" : "chiseltest\/DecoupledDriver.html#expectPeek(data:T):Unit", "kind" : "def"}, {"label" : "expectDequeueSeq", "tail" : "(data: Seq[T]): Unit", "member" : "chiseltest.DecoupledDriver.expectDequeueSeq", "link" : "chiseltest\/DecoupledDriver.html#expectDequeueSeq(data:Seq[T]):Unit", "kind" : "def"}, {"label" : "expectDequeueNow", "tail" : "(data: T): Unit", "member" : "chiseltest.DecoupledDriver.expectDequeueNow", "link" : "chiseltest\/DecoupledDriver.html#expectDequeueNow(data:T):Unit", "kind" : "def"}, {"label" : "expectDequeue", "tail" : "(data: T): Unit", "member" : "chiseltest.DecoupledDriver.expectDequeue", "link" : "chiseltest\/DecoupledDriver.html#expectDequeue(data:T):Unit", "kind" : "def"}, {"label" : "waitForValid", "tail" : "(): Unit", "member" : "chiseltest.DecoupledDriver.waitForValid", "link" : "chiseltest\/DecoupledDriver.html#waitForValid():Unit", "kind" : "def"}, {"label" : "getSinkClock", "tail" : "(): Clock", "member" : "chiseltest.DecoupledDriver.getSinkClock", "link" : "chiseltest\/DecoupledDriver.html#getSinkClock:chisel3.Clock", "kind" : "def"}, {"label" : "setSinkClock", "tail" : "(clock: Clock): DecoupledDriver.this.type", "member" : "chiseltest.DecoupledDriver.setSinkClock", "link" : "chiseltest\/DecoupledDriver.html#setSinkClock(clock:chisel3.Clock):DecoupledDriver.this.type", "kind" : "def"}, {"label" : "initSink", "tail" : "(): DecoupledDriver.this.type", "member" : "chiseltest.DecoupledDriver.initSink", "link" : "chiseltest\/DecoupledDriver.html#initSink():DecoupledDriver.this.type", "kind" : "def"}, {"label" : "enqueueSeq", "tail" : "(data: Seq[T]): Unit", "member" : "chiseltest.DecoupledDriver.enqueueSeq", "link" : "chiseltest\/DecoupledDriver.html#enqueueSeq(data:Seq[T]):Unit", "kind" : "def"}, {"label" : "enqueue", "tail" : "(data: T): Unit", "member" : "chiseltest.DecoupledDriver.enqueue", "link" : "chiseltest\/DecoupledDriver.html#enqueue(data:T):Unit", "kind" : "def"}, {"label" : "enqueueNow", "tail" : "(data: T): Unit", "member" : "chiseltest.DecoupledDriver.enqueueNow", "link" : "chiseltest\/DecoupledDriver.html#enqueueNow(data:T):Unit", "kind" : "def"}, {"label" : "getSourceClock", "tail" : "(): Clock", "member" : "chiseltest.DecoupledDriver.getSourceClock", "link" : "chiseltest\/DecoupledDriver.html#getSourceClock:chisel3.Clock", "kind" : "def"}, {"label" : "setSourceClock", "tail" : "(clock: Clock): DecoupledDriver.this.type", "member" : "chiseltest.DecoupledDriver.setSourceClock", "link" : "chiseltest\/DecoupledDriver.html#setSourceClock(clock:chisel3.Clock):DecoupledDriver.this.type", "kind" : "def"}, {"label" : "initSource", "tail" : "(): DecoupledDriver.this.type", "member" : "chiseltest.DecoupledDriver.initSource", "link" : "chiseltest\/DecoupledDriver.html#initSource():DecoupledDriver.this.type", "kind" : "def"}, {"member" : "chiseltest.DecoupledDriver#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/DecoupledDriver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/DecoupledDriver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/DecoupledDriver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/DecoupledDriver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/DecoupledDriver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/DecoupledDriver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/DecoupledDriver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/DecoupledDriver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/DecoupledDriver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/DecoupledDriver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/DecoupledDriver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/DecoupledDriver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/DecoupledDriver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/DecoupledDriver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/DecoupledDriver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/DecoupledDriver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/DecoupledDriver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/DecoupledDriver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/DecoupledDriver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "decoupledSinkKey", "tail" : ": AnyRef", "member" : "chiseltest.DecoupledDriver.decoupledSinkKey", "link" : "chiseltest\/DecoupledDriver$.html#decoupledSinkKey:Object", "kind" : "val"}, {"label" : "decoupledSourceKey", "tail" : ": AnyRef", "member" : "chiseltest.DecoupledDriver.decoupledSourceKey", "link" : "chiseltest\/DecoupledDriver$.html#decoupledSourceKey:Object", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/DecoupledDriver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/DecoupledDriver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/DecoupledDriver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/DecoupledDriver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/DecoupledDriver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/DecoupledDriver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/DecoupledDriver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/DecoupledDriver$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/DecoupledDriver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/DecoupledDriver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/DecoupledDriver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/DecoupledDriver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/DecoupledDriver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/DecoupledDriver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/DecoupledDriver$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/DecoupledDriver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/DecoupledDriver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/DecoupledDriver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/DecoupledDriver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/DecoupledDriver.html", "kind" : "class"}, {"name" : "chiseltest.fork", "shortDescription" : "", "object" : "chiseltest\/package$$fork$.html", "members_object" : [{"label" : "withName", "tail" : "(newName: String): ForkBuilder", "member" : "chiseltest.internal.ForkBuilder.withName", "link" : "chiseltest\/package$$fork$.html#withName(newName:String):chiseltest.internal.ForkBuilder", "kind" : "def"}, {"label" : "withRegion", "tail" : "(newRegion: Region): ForkBuilder", "member" : "chiseltest.internal.ForkBuilder.withRegion", "link" : "chiseltest\/package$$fork$.html#withRegion(newRegion:chiseltest.Region):chiseltest.internal.ForkBuilder", "kind" : "def"}, {"label" : "apply", "tail" : "(runnable: ⇒ Unit): TesterThreadList", "member" : "chiseltest.internal.ForkBuilder.apply", "link" : "chiseltest\/package$$fork$.html#apply(runnable:=>Unit):chiseltest.internal.TesterThreadList", "kind" : "def"}, {"label" : "threads", "tail" : ": Seq[AbstractTesterThread]", "member" : "chiseltest.internal.ForkBuilder.threads", "link" : "chiseltest\/package$$fork$.html#threads:Seq[chiseltest.internal.AbstractTesterThread]", "kind" : "val"}, {"label" : "region", "tail" : ": Option[Region]", "member" : "chiseltest.internal.ForkBuilder.region", "link" : "chiseltest\/package$$fork$.html#region:Option[chiseltest.Region]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "chiseltest.internal.ForkBuilder.name", "link" : "chiseltest\/package$$fork$.html#name:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/package$$fork$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/package$$fork$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/package$$fork$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/package$$fork$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/package$$fork$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/package$$fork$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/package$$fork$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$fork$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$fork$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$fork$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/package$$fork$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/package$$fork$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/package$$fork$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/package$$fork$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/package$$fork$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/package$$fork$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.LiteralTypeException", "shortDescription" : "", "members_class" : [{"member" : "chiseltest.LiteralTypeException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "chiseltest\/LiteralTypeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "chiseltest\/LiteralTypeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "chiseltest\/LiteralTypeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "chiseltest\/LiteralTypeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "chiseltest\/LiteralTypeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/LiteralTypeException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/LiteralTypeException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/LiteralTypeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "chiseltest\/LiteralTypeException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "chiseltest\/LiteralTypeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "chiseltest\/LiteralTypeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "chiseltest\/LiteralTypeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "chiseltest\/LiteralTypeException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/LiteralTypeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/LiteralTypeException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/LiteralTypeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/LiteralTypeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/LiteralTypeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/LiteralTypeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/LiteralTypeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/LiteralTypeException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/LiteralTypeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/LiteralTypeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/LiteralTypeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/LiteralTypeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/LiteralTypeException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/LiteralTypeException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/LiteralTypeException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/LiteralTypeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/LiteralTypeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/LiteralTypeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/LiteralTypeException.html", "kind" : "class"}, {"name" : "chiseltest.Monitor", "shortDescription" : "", "object" : "chiseltest\/Monitor$.html", "members_object" : [{"label" : "isEqual", "tail" : "(other: Region): Boolean", "member" : "chiseltest.Region.isEqual", "link" : "chiseltest\/Monitor$.html#isEqual(other:chiseltest.Region):Boolean", "kind" : "def"}, {"label" : "isAfter", "tail" : "(other: Region): Boolean", "member" : "chiseltest.Region.isAfter", "link" : "chiseltest\/Monitor$.html#isAfter(other:chiseltest.Region):Boolean", "kind" : "def"}, {"label" : "isBefore", "tail" : "(other: Region): Boolean", "member" : "chiseltest.Region.isBefore", "link" : "chiseltest\/Monitor$.html#isBefore(other:chiseltest.Region):Boolean", "kind" : "def"}, {"label" : "getPos", "tail" : "(): Int", "member" : "chiseltest.Region.getPos", "link" : "chiseltest\/Monitor$.html#getPos():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/Monitor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/Monitor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/Monitor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/Monitor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/Monitor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/Monitor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/Monitor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/Monitor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/Monitor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/Monitor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/Monitor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/Monitor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/Monitor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/Monitor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/Monitor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/Monitor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/Monitor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/Monitor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/Monitor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.NotLiteralException", "shortDescription" : "", "members_class" : [{"member" : "chiseltest.NotLiteralException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "chiseltest\/NotLiteralException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "chiseltest\/NotLiteralException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "chiseltest\/NotLiteralException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "chiseltest\/NotLiteralException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "chiseltest\/NotLiteralException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/NotLiteralException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/NotLiteralException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/NotLiteralException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "chiseltest\/NotLiteralException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "chiseltest\/NotLiteralException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "chiseltest\/NotLiteralException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "chiseltest\/NotLiteralException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "chiseltest\/NotLiteralException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/NotLiteralException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/NotLiteralException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/NotLiteralException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/NotLiteralException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/NotLiteralException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/NotLiteralException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/NotLiteralException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/NotLiteralException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/NotLiteralException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/NotLiteralException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/NotLiteralException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/NotLiteralException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/NotLiteralException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/NotLiteralException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/NotLiteralException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/NotLiteralException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/NotLiteralException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/NotLiteralException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/NotLiteralException.html", "kind" : "class"}, {"name" : "chiseltest.RawTester", "shortDescription" : "This is a simple tester that does not require that it be within the scope of a scalatestin order to run.", "object" : "chiseltest\/RawTester$.html", "members_object" : [{"label" : "test", "tail" : "(dutGen: ⇒ T, annotationSeq: AnnotationSeq)(testFn: (T) ⇒ Unit): Unit", "member" : "chiseltest.RawTester.test", "link" : "chiseltest\/RawTester$.html#test[T<:chisel3.MultiIOModule](dutGen:=>T,annotationSeq:firrtl.AnnotationSeq)(testFn:T=>Unit):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/RawTester$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/RawTester$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/RawTester$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/RawTester$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/RawTester$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/RawTester$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/RawTester$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/RawTester$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/RawTester$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/RawTester$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/RawTester$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/RawTester$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/RawTester$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/RawTester$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/RawTester$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/RawTester$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/RawTester$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/RawTester$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/RawTester$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.Region", "shortDescription" : "Base class for regions, akin to Verilog regions for ordering events between threads within the same timestep.", "object" : "chiseltest\/Region$.html", "members_class" : [{"label" : "isEqual", "tail" : "(other: Region): Boolean", "member" : "chiseltest.Region.isEqual", "link" : "chiseltest\/Region.html#isEqual(other:chiseltest.Region):Boolean", "kind" : "def"}, {"label" : "isAfter", "tail" : "(other: Region): Boolean", "member" : "chiseltest.Region.isAfter", "link" : "chiseltest\/Region.html#isAfter(other:chiseltest.Region):Boolean", "kind" : "def"}, {"label" : "isBefore", "tail" : "(other: Region): Boolean", "member" : "chiseltest.Region.isBefore", "link" : "chiseltest\/Region.html#isBefore(other:chiseltest.Region):Boolean", "kind" : "def"}, {"label" : "getPos", "tail" : "(): Int", "member" : "chiseltest.Region.getPos", "link" : "chiseltest\/Region.html#getPos():Int", "kind" : "def"}, {"member" : "chiseltest.Region#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/Region.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/Region.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/Region.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/Region.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/Region.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/Region.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/Region.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/Region.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/Region.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/Region.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/Region.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/Region.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/Region.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/Region.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/Region.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/Region.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/Region.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/Region.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/Region.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "allRegions", "tail" : ": Seq[Region]", "member" : "chiseltest.Region.allRegions", "link" : "chiseltest\/Region$.html#allRegions:Seq[chiseltest.Region]", "kind" : "val"}, {"label" : "default", "tail" : ": TestdriverMain.type", "member" : "chiseltest.Region.default", "link" : "chiseltest\/Region$.html#default:chiseltest.TestdriverMain.type", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/Region$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/Region$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/Region$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/Region$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/Region$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/Region$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/Region$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/Region$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/Region$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/Region$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/Region$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/Region$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/Region$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/Region$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/Region$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/Region$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/Region$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/Region$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/Region$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/Region.html", "kind" : "class"}, {"name" : "chiseltest.TemporalParadox", "shortDescription" : "", "members_class" : [{"member" : "chiseltest.TemporalParadox#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "chiseltest\/TemporalParadox.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "chiseltest\/TemporalParadox.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "chiseltest\/TemporalParadox.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "chiseltest\/TemporalParadox.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "chiseltest\/TemporalParadox.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/TemporalParadox.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/TemporalParadox.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/TemporalParadox.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "chiseltest\/TemporalParadox.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "chiseltest\/TemporalParadox.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "chiseltest\/TemporalParadox.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "chiseltest\/TemporalParadox.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "chiseltest\/TemporalParadox.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/TemporalParadox.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/TemporalParadox.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/TemporalParadox.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/TemporalParadox.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/TemporalParadox.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/TemporalParadox.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/TemporalParadox.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/TemporalParadox.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/TemporalParadox.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/TemporalParadox.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/TemporalParadox.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/TemporalParadox.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/TemporalParadox.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/TemporalParadox.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/TemporalParadox.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/TemporalParadox.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/TemporalParadox.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/TemporalParadox.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/TemporalParadox.html", "kind" : "class"}, {"name" : "chiseltest.testableClock", "shortDescription" : "", "members_class" : [{"label" : "step", "tail" : "(cycles: Int): Unit", "member" : "chiseltest.testableClock.step", "link" : "chiseltest\/package$$testableClock.html#step(cycles:Int):Unit", "kind" : "def"}, {"label" : "setTimeout", "tail" : "(cycles: Int): Unit", "member" : "chiseltest.testableClock.setTimeout", "link" : "chiseltest\/package$$testableClock.html#setTimeout(cycles:Int):Unit", "kind" : "def"}, {"member" : "chiseltest.testableClock#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/package$$testableClock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/package$$testableClock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/package$$testableClock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/package$$testableClock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/package$$testableClock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/package$$testableClock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/package$$testableClock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$testableClock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$testableClock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$testableClock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/package$$testableClock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/package$$testableClock.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/package$$testableClock.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/package$$testableClock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/package$$testableClock.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/package$$testableClock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/package$$testableClock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/package$$testableClock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/package$$testableClock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/package$$testableClock.html", "kind" : "class"}, {"name" : "chiseltest.testableData", "shortDescription" : "", "members_class" : [{"label" : "getSinkClock", "tail" : "(): Clock", "member" : "chiseltest.testableData.getSinkClock", "link" : "chiseltest\/package$$testableData.html#getSinkClock():chisel3.Clock", "kind" : "def"}, {"label" : "getSourceClock", "tail" : "(): Clock", "member" : "chiseltest.testableData.getSourceClock", "link" : "chiseltest\/package$$testableData.html#getSourceClock():chisel3.Clock", "kind" : "def"}, {"label" : "expect", "tail" : "(value: T, message: String): Unit", "member" : "chiseltest.testableData.expect", "link" : "chiseltest\/package$$testableData.html#expect(value:T,message:String):Unit", "kind" : "def"}, {"label" : "expect", "tail" : "(value: T): Unit", "member" : "chiseltest.testableData.expect", "link" : "chiseltest\/package$$testableData.html#expect(value:T):Unit", "kind" : "def"}, {"label" : "expectWithStale", "tail" : "(value: T, message: Option[String], stale: Boolean): Unit", "member" : "chiseltest.testableData.expectWithStale", "link" : "chiseltest\/package$$testableData.html#expectWithStale(value:T,message:Option[String],stale:Boolean):Unit", "kind" : "def"}, {"label" : "peek", "tail" : "(): T", "member" : "chiseltest.testableData.peek", "link" : "chiseltest\/package$$testableData.html#peek():T", "kind" : "def"}, {"label" : "peekWithStale", "tail" : "(stale: Boolean): T", "member" : "chiseltest.testableData.peekWithStale", "link" : "chiseltest\/package$$testableData.html#peekWithStale(stale:Boolean):T", "kind" : "def"}, {"label" : "poke", "tail" : "(value: T): Unit", "member" : "chiseltest.testableData.poke", "link" : "chiseltest\/package$$testableData.html#poke(value:T):Unit", "kind" : "def"}, {"label" : "pokeBits", "tail" : "(signal: Data, value: BigInt): Unit", "member" : "chiseltest.testableData.pokeBits", "link" : "chiseltest\/package$$testableData.html#pokeBits(signal:chisel3.Data,value:BigInt):Unit", "kind" : "def"}, {"member" : "chiseltest.testableData#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/package$$testableData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/package$$testableData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/package$$testableData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/package$$testableData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/package$$testableData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/package$$testableData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/package$$testableData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$testableData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$testableData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$testableData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/package$$testableData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/package$$testableData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/package$$testableData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/package$$testableData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/package$$testableData.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/package$$testableData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/package$$testableData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/package$$testableData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/package$$testableData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/package$$testableData.html", "kind" : "class"}, {"name" : "chiseltest.testableRecord", "shortDescription" : "", "members_class" : [{"label" : "expectPartial", "tail" : "(value: T): Unit", "member" : "chiseltest.testableRecord.expectPartial", "link" : "chiseltest\/package$$testableRecord.html#expectPartial(value:T):Unit", "kind" : "def"}, {"label" : "pokePartial", "tail" : "(value: T): Unit", "member" : "chiseltest.testableRecord.pokePartial", "link" : "chiseltest\/package$$testableRecord.html#pokePartial(value:T):Unit", "kind" : "def"}, {"member" : "chiseltest.testableRecord#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/package$$testableRecord.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/package$$testableRecord.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/package$$testableRecord.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/package$$testableRecord.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/package$$testableRecord.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/package$$testableRecord.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/package$$testableRecord.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$testableRecord.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$testableRecord.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$testableRecord.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/package$$testableRecord.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/package$$testableRecord.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/package$$testableRecord.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/package$$testableRecord.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/package$$testableRecord.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/package$$testableRecord.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/package$$testableRecord.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/package$$testableRecord.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/package$$testableRecord.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/package$$testableRecord.html", "kind" : "class"}, {"name" : "chiseltest.TestdriverMain", "shortDescription" : "", "object" : "chiseltest\/TestdriverMain$.html", "members_object" : [{"label" : "isEqual", "tail" : "(other: Region): Boolean", "member" : "chiseltest.Region.isEqual", "link" : "chiseltest\/TestdriverMain$.html#isEqual(other:chiseltest.Region):Boolean", "kind" : "def"}, {"label" : "isAfter", "tail" : "(other: Region): Boolean", "member" : "chiseltest.Region.isAfter", "link" : "chiseltest\/TestdriverMain$.html#isAfter(other:chiseltest.Region):Boolean", "kind" : "def"}, {"label" : "isBefore", "tail" : "(other: Region): Boolean", "member" : "chiseltest.Region.isBefore", "link" : "chiseltest\/TestdriverMain$.html#isBefore(other:chiseltest.Region):Boolean", "kind" : "def"}, {"label" : "getPos", "tail" : "(): Int", "member" : "chiseltest.Region.getPos", "link" : "chiseltest\/TestdriverMain$.html#getPos():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/TestdriverMain$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/TestdriverMain$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/TestdriverMain$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/TestdriverMain$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/TestdriverMain$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/TestdriverMain$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/TestdriverMain$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/TestdriverMain$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/TestdriverMain$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/TestdriverMain$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/TestdriverMain$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/TestdriverMain$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/TestdriverMain$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/TestdriverMain$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/TestdriverMain$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/TestdriverMain$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/TestdriverMain$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/TestdriverMain$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/TestdriverMain$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.TestInstance", "shortDescription" : "", "object" : "chiseltest\/package$$TestInstance$.html", "members_object" : [{"label" : "getVar", "tail" : "(key: Any): Option[Any]", "member" : "chiseltest.TestInstance.getVar", "link" : "chiseltest\/package$$TestInstance$.html#getVar(key:Any):Option[Any]", "kind" : "def"}, {"label" : "setVar", "tail" : "(key: Any, value: Any): Unit", "member" : "chiseltest.TestInstance.setVar", "link" : "chiseltest\/package$$TestInstance$.html#setVar(key:Any,value:Any):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/package$$TestInstance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/package$$TestInstance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/package$$TestInstance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/package$$TestInstance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/package$$TestInstance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/package$$TestInstance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/package$$TestInstance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$TestInstance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$TestInstance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/package$$TestInstance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/package$$TestInstance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/package$$TestInstance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/package$$TestInstance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/package$$TestInstance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/package$$TestInstance$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/package$$TestInstance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/package$$TestInstance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/package$$TestInstance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/package$$TestInstance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chiseltest.ThreadOrderDependentException", "shortDescription" : "", "members_class" : [{"member" : "chiseltest.ThreadOrderDependentException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "chiseltest\/ThreadOrderDependentException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "chiseltest\/ThreadOrderDependentException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "chiseltest\/ThreadOrderDependentException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "chiseltest\/ThreadOrderDependentException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "chiseltest\/ThreadOrderDependentException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/ThreadOrderDependentException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/ThreadOrderDependentException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/ThreadOrderDependentException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "chiseltest\/ThreadOrderDependentException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "chiseltest\/ThreadOrderDependentException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "chiseltest\/ThreadOrderDependentException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "chiseltest\/ThreadOrderDependentException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "chiseltest\/ThreadOrderDependentException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/ThreadOrderDependentException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/ThreadOrderDependentException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/ThreadOrderDependentException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/ThreadOrderDependentException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/ThreadOrderDependentException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/ThreadOrderDependentException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/ThreadOrderDependentException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ThreadOrderDependentException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ThreadOrderDependentException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ThreadOrderDependentException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/ThreadOrderDependentException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/ThreadOrderDependentException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/ThreadOrderDependentException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/ThreadOrderDependentException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/ThreadOrderDependentException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/ThreadOrderDependentException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/ThreadOrderDependentException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/ThreadOrderDependentException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/ThreadOrderDependentException.html", "kind" : "class"}, {"name" : "chiseltest.TimeoutException", "shortDescription" : "", "members_class" : [{"member" : "chiseltest.TimeoutException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "chiseltest\/TimeoutException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "chiseltest\/TimeoutException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "chiseltest\/TimeoutException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "chiseltest\/TimeoutException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "chiseltest\/TimeoutException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/TimeoutException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/TimeoutException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/TimeoutException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "chiseltest\/TimeoutException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "chiseltest\/TimeoutException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "chiseltest\/TimeoutException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "chiseltest\/TimeoutException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "chiseltest\/TimeoutException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/TimeoutException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/TimeoutException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/TimeoutException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/TimeoutException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/TimeoutException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/TimeoutException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/TimeoutException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/TimeoutException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/TimeoutException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/TimeoutException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/TimeoutException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/TimeoutException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/TimeoutException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/TimeoutException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/TimeoutException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/TimeoutException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/TimeoutException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/TimeoutException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/TimeoutException.html", "kind" : "class"}, {"name" : "chiseltest.UnpokeableException", "shortDescription" : "", "members_class" : [{"member" : "chiseltest.UnpokeableException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "chiseltest\/UnpokeableException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "chiseltest\/UnpokeableException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "chiseltest\/UnpokeableException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "chiseltest\/UnpokeableException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "chiseltest\/UnpokeableException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/UnpokeableException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/UnpokeableException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/UnpokeableException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "chiseltest\/UnpokeableException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "chiseltest\/UnpokeableException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "chiseltest\/UnpokeableException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "chiseltest\/UnpokeableException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "chiseltest\/UnpokeableException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/UnpokeableException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/UnpokeableException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/UnpokeableException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/UnpokeableException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/UnpokeableException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/UnpokeableException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/UnpokeableException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/UnpokeableException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/UnpokeableException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/UnpokeableException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/UnpokeableException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/UnpokeableException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/UnpokeableException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/UnpokeableException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/UnpokeableException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/UnpokeableException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/UnpokeableException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/UnpokeableException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/UnpokeableException.html", "kind" : "class"}, {"name" : "chiseltest.UnsupportedOperationException", "shortDescription" : "", "members_class" : [{"member" : "chiseltest.UnsupportedOperationException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "chiseltest\/UnsupportedOperationException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "chiseltest\/UnsupportedOperationException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "chiseltest\/UnsupportedOperationException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "chiseltest\/UnsupportedOperationException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "chiseltest\/UnsupportedOperationException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/UnsupportedOperationException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/UnsupportedOperationException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "chiseltest\/UnsupportedOperationException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "chiseltest\/UnsupportedOperationException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "chiseltest\/UnsupportedOperationException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "chiseltest\/UnsupportedOperationException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "chiseltest\/UnsupportedOperationException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "chiseltest\/UnsupportedOperationException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/UnsupportedOperationException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/UnsupportedOperationException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/UnsupportedOperationException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/UnsupportedOperationException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/UnsupportedOperationException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/UnsupportedOperationException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/UnsupportedOperationException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/UnsupportedOperationException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/UnsupportedOperationException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/UnsupportedOperationException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/UnsupportedOperationException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/UnsupportedOperationException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/UnsupportedOperationException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/UnsupportedOperationException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/UnsupportedOperationException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/UnsupportedOperationException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/UnsupportedOperationException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/UnsupportedOperationException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/UnsupportedOperationException.html", "kind" : "class"}, {"name" : "chiseltest.ValidDriver", "shortDescription" : "", "object" : "chiseltest\/ValidDriver$.html", "members_class" : [{"label" : "expectInvalid", "tail" : "(): Unit", "member" : "chiseltest.ValidDriver.expectInvalid", "link" : "chiseltest\/ValidDriver.html#expectInvalid():Unit", "kind" : "def"}, {"label" : "expectPeek", "tail" : "(data: T): Unit", "member" : "chiseltest.ValidDriver.expectPeek", "link" : "chiseltest\/ValidDriver.html#expectPeek(data:T):Unit", "kind" : "def"}, {"label" : "expectDequeueSeq", "tail" : "(data: Seq[T]): Unit", "member" : "chiseltest.ValidDriver.expectDequeueSeq", "link" : "chiseltest\/ValidDriver.html#expectDequeueSeq(data:Seq[T]):Unit", "kind" : "def"}, {"label" : "expectDequeueNow", "tail" : "(data: T): Unit", "member" : "chiseltest.ValidDriver.expectDequeueNow", "link" : "chiseltest\/ValidDriver.html#expectDequeueNow(data:T):Unit", "kind" : "def"}, {"label" : "expectDequeue", "tail" : "(data: T): Unit", "member" : "chiseltest.ValidDriver.expectDequeue", "link" : "chiseltest\/ValidDriver.html#expectDequeue(data:T):Unit", "kind" : "def"}, {"label" : "waitForValid", "tail" : "(): Unit", "member" : "chiseltest.ValidDriver.waitForValid", "link" : "chiseltest\/ValidDriver.html#waitForValid():Unit", "kind" : "def"}, {"label" : "getSinkClock", "tail" : "(): Clock", "member" : "chiseltest.ValidDriver.getSinkClock", "link" : "chiseltest\/ValidDriver.html#getSinkClock:chisel3.Clock", "kind" : "def"}, {"label" : "setSinkClock", "tail" : "(clock: Clock): ValidDriver.this.type", "member" : "chiseltest.ValidDriver.setSinkClock", "link" : "chiseltest\/ValidDriver.html#setSinkClock(clock:chisel3.Clock):ValidDriver.this.type", "kind" : "def"}, {"label" : "initSink", "tail" : "(): ValidDriver.this.type", "member" : "chiseltest.ValidDriver.initSink", "link" : "chiseltest\/ValidDriver.html#initSink():ValidDriver.this.type", "kind" : "def"}, {"label" : "enqueueSeq", "tail" : "(data: Seq[T]): Unit", "member" : "chiseltest.ValidDriver.enqueueSeq", "link" : "chiseltest\/ValidDriver.html#enqueueSeq(data:Seq[T]):Unit", "kind" : "def"}, {"label" : "enqueueNow", "tail" : "(data: T): Unit", "member" : "chiseltest.ValidDriver.enqueueNow", "link" : "chiseltest\/ValidDriver.html#enqueueNow(data:T):Unit", "kind" : "def"}, {"label" : "getSourceClock", "tail" : "(): Clock", "member" : "chiseltest.ValidDriver.getSourceClock", "link" : "chiseltest\/ValidDriver.html#getSourceClock:chisel3.Clock", "kind" : "def"}, {"label" : "setSourceClock", "tail" : "(clock: Clock): ValidDriver.this.type", "member" : "chiseltest.ValidDriver.setSourceClock", "link" : "chiseltest\/ValidDriver.html#setSourceClock(clock:chisel3.Clock):ValidDriver.this.type", "kind" : "def"}, {"label" : "initSource", "tail" : "(): ValidDriver.this.type", "member" : "chiseltest.ValidDriver.initSource", "link" : "chiseltest\/ValidDriver.html#initSource():ValidDriver.this.type", "kind" : "def"}, {"member" : "chiseltest.ValidDriver#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/ValidDriver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/ValidDriver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/ValidDriver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/ValidDriver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/ValidDriver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/ValidDriver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/ValidDriver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ValidDriver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ValidDriver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ValidDriver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/ValidDriver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/ValidDriver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/ValidDriver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/ValidDriver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/ValidDriver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/ValidDriver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/ValidDriver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/ValidDriver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/ValidDriver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "validSinkKey", "tail" : ": AnyRef", "member" : "chiseltest.ValidDriver.validSinkKey", "link" : "chiseltest\/ValidDriver$.html#validSinkKey:Object", "kind" : "val"}, {"label" : "validSourceKey", "tail" : ": AnyRef", "member" : "chiseltest.ValidDriver.validSourceKey", "link" : "chiseltest\/ValidDriver$.html#validSourceKey:Object", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/ValidDriver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/ValidDriver$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/ValidDriver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/ValidDriver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/ValidDriver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/ValidDriver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/ValidDriver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ValidDriver$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ValidDriver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/ValidDriver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/ValidDriver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/ValidDriver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/ValidDriver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/ValidDriver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/ValidDriver$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/ValidDriver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/ValidDriver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/ValidDriver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/ValidDriver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chiseltest\/ValidDriver.html", "kind" : "class"}], "chiseltest.backends" : [{"name" : "chiseltest.backends.BackendExecutive", "members_trait" : [{"label" : "combinationalPathsToData", "tail" : "(dut: BaseModule, paths: Seq[CombinationalPath], dataNames: Map[Data, String], componentToName: (ReferenceTarget) ⇒ String): Map[Data, Set[Data]]", "member" : "chiseltest.backends.BackendExecutive.combinationalPathsToData", "link" : "chiseltest\/backends\/BackendExecutive.html#combinationalPathsToData(dut:chisel3.experimental.BaseModule,paths:Seq[firrtl.transforms.CombinationalPath],dataNames:Map[chisel3.Data,String],componentToName:firrtl.annotations.ReferenceTarget=>String):Map[chisel3.Data,Set[chisel3.Data]]", "kind" : "def"}, {"label" : "getDataNames", "tail" : "(name: String, data: Data): Seq[(Data, String)]", "member" : "chiseltest.backends.BackendExecutive.getDataNames", "link" : "chiseltest\/backends\/BackendExecutive.html#getDataNames(name:String,data:chisel3.Data):Seq[(chisel3.Data,String)]", "kind" : "def"}, {"label" : "getTopModule", "tail" : "(circuit: Circuit): BaseModule", "member" : "chiseltest.backends.BackendExecutive.getTopModule", "link" : "chiseltest\/backends\/BackendExecutive.html#getTopModule(circuit:chisel3.internal.firrtl.Circuit):chisel3.experimental.BaseModule", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chiseltest\/backends\/BackendExecutive.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chiseltest\/backends\/BackendExecutive.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chiseltest\/backends\/BackendExecutive.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chiseltest\/backends\/BackendExecutive.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chiseltest\/backends\/BackendExecutive.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chiseltest\/backends\/BackendExecutive.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chiseltest\/backends\/BackendExecutive.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/BackendExecutive.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/BackendExecutive.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chiseltest\/backends\/BackendExecutive.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chiseltest\/backends\/BackendExecutive.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chiseltest\/backends\/BackendExecutive.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chiseltest\/backends\/BackendExecutive.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chiseltest\/backends\/BackendExecutive.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chiseltest\/backends\/BackendExecutive.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chiseltest\/backends\/BackendExecutive.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chiseltest\/backends\/BackendExecutive.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chiseltest\/backends\/BackendExecutive.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chiseltest\/backends\/BackendExecutive.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "start", "tail" : "(dutGen: () ⇒ T, annotationSeq: AnnotationSeq): BackendInstance[T]", "member" : "chiseltest.backends.BackendExecutive.start", "link" : "chiseltest\/backends\/BackendExecutive.html#start[T<:chisel3.MultiIOModule](dutGen:()=>T,annotationSeq:firrtl.AnnotationSeq):chiseltest.internal.BackendInstance[T]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "chiseltest\/backends\/BackendExecutive.html", "kind" : "trait"}], "chisel3.tester" : [{"name" : "chisel3.tester.experimental", "shortDescription" : "", "object" : "chisel3\/tester\/package$$experimental$.html", "members_object" : [{"label" : "AsyncResetBlackBoxFactory", "tail" : "", "member" : "chisel3.tester.experimental.AsyncResetBlackBoxFactory", "link" : "chisel3\/tester\/package$$experimental$.html#AsyncResetBlackBoxFactory=chiseltest.experimental.AsyncResetBlackBoxFactory", "kind" : "type"}, {"label" : "AsyncResetRegScalaImpl", "tail" : "", "member" : "chisel3.tester.experimental.AsyncResetRegScalaImpl", "link" : "chisel3\/tester\/package$$experimental$.html#AsyncResetRegScalaImpl=chiseltest.experimental.AsyncResetRegScalaImpl", "kind" : "type"}, {"label" : "AsyncResetReg", "tail" : "", "member" : "chisel3.tester.experimental.AsyncResetReg", "link" : "chisel3\/tester\/package$$experimental$.html#AsyncResetReg=chiseltest.experimental.AsyncResetReg", "kind" : "type"}, {"label" : "UncheckedClockPoke", "tail" : "", "member" : "chisel3.tester.experimental.UncheckedClockPoke", "link" : "chisel3\/tester\/package$$experimental$.html#UncheckedClockPoke", "kind" : "object"}, {"label" : "UncheckedClockPeek", "tail" : "", "member" : "chisel3.tester.experimental.UncheckedClockPeek", "link" : "chisel3\/tester\/package$$experimental$.html#UncheckedClockPeek", "kind" : "object"}, {"label" : "TestOptionBuilder", "tail" : "", "member" : "chisel3.tester.experimental.TestOptionBuilder", "link" : "chisel3\/tester\/package$$experimental$.html#TestOptionBuilder", "kind" : "object"}, {"label" : "sanitizeFileName", "tail" : "(name: String): String", "member" : "chisel3.tester.experimental.sanitizeFileName", "link" : "chisel3\/tester\/package$$experimental$.html#sanitizeFileName(name:String):String", "kind" : "def"}, {"label" : "TesterOptions", "tail" : ": chiseltest.internal.TesterOptions.type", "member" : "chisel3.tester.experimental.TesterOptions", "link" : "chisel3\/tester\/package$$experimental$.html#TesterOptions:chiseltest.internal.TesterOptions.type", "kind" : "val"}, {"label" : "TesterOptions", "tail" : "", "member" : "chisel3.tester.experimental.TesterOptions", "link" : "chisel3\/tester\/package$$experimental$.html#TesterOptions=chiseltest.experimental.TesterOptions", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chisel3\/tester\/package$$experimental$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chisel3\/tester\/package$$experimental$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chisel3\/tester\/package$$experimental$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chisel3\/tester\/package$$experimental$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chisel3\/tester\/package$$experimental$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chisel3\/tester\/package$$experimental$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chisel3\/tester\/package$$experimental$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/package$$experimental$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/package$$experimental$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/package$$experimental$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chisel3\/tester\/package$$experimental$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chisel3\/tester\/package$$experimental$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chisel3\/tester\/package$$experimental$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chisel3\/tester\/package$$experimental$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chisel3\/tester\/package$$experimental$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chisel3\/tester\/package$$experimental$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chisel3\/tester\/package$$experimental$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chisel3\/tester\/package$$experimental$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chisel3\/tester\/package$$experimental$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chisel3.tester.testableClock", "shortDescription" : "", "members_class" : [{"member" : "chisel3.tester.testableClock#<init>", "error" : "unsupported entity"}, {"label" : "step", "tail" : "(cycles: Int): Unit", "member" : "chiseltest.testableClock.step", "link" : "chisel3\/tester\/package$$testableClock.html#step(cycles:Int):Unit", "kind" : "def"}, {"label" : "setTimeout", "tail" : "(cycles: Int): Unit", "member" : "chiseltest.testableClock.setTimeout", "link" : "chisel3\/tester\/package$$testableClock.html#setTimeout(cycles:Int):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chisel3\/tester\/package$$testableClock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chisel3\/tester\/package$$testableClock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chisel3\/tester\/package$$testableClock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chisel3\/tester\/package$$testableClock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chisel3\/tester\/package$$testableClock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chisel3\/tester\/package$$testableClock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chisel3\/tester\/package$$testableClock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/package$$testableClock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/package$$testableClock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/package$$testableClock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chisel3\/tester\/package$$testableClock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chisel3\/tester\/package$$testableClock.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chisel3\/tester\/package$$testableClock.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chisel3\/tester\/package$$testableClock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chisel3\/tester\/package$$testableClock.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chisel3\/tester\/package$$testableClock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chisel3\/tester\/package$$testableClock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chisel3\/tester\/package$$testableClock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chisel3\/tester\/package$$testableClock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chisel3\/tester\/package$$testableClock.html", "kind" : "class"}, {"name" : "chisel3.tester.testableData", "shortDescription" : "", "members_class" : [{"member" : "chisel3.tester.testableData#<init>", "error" : "unsupported entity"}, {"label" : "getSinkClock", "tail" : "(): Clock", "member" : "chiseltest.testableData.getSinkClock", "link" : "chisel3\/tester\/package$$testableData.html#getSinkClock():chisel3.Clock", "kind" : "def"}, {"label" : "getSourceClock", "tail" : "(): Clock", "member" : "chiseltest.testableData.getSourceClock", "link" : "chisel3\/tester\/package$$testableData.html#getSourceClock():chisel3.Clock", "kind" : "def"}, {"label" : "expect", "tail" : "(value: T, message: String): Unit", "member" : "chiseltest.testableData.expect", "link" : "chisel3\/tester\/package$$testableData.html#expect(value:T,message:String):Unit", "kind" : "def"}, {"label" : "expect", "tail" : "(value: T): Unit", "member" : "chiseltest.testableData.expect", "link" : "chisel3\/tester\/package$$testableData.html#expect(value:T):Unit", "kind" : "def"}, {"label" : "expectWithStale", "tail" : "(value: T, message: Option[String], stale: Boolean): Unit", "member" : "chiseltest.testableData.expectWithStale", "link" : "chisel3\/tester\/package$$testableData.html#expectWithStale(value:T,message:Option[String],stale:Boolean):Unit", "kind" : "def"}, {"label" : "peek", "tail" : "(): T", "member" : "chiseltest.testableData.peek", "link" : "chisel3\/tester\/package$$testableData.html#peek():T", "kind" : "def"}, {"label" : "peekWithStale", "tail" : "(stale: Boolean): T", "member" : "chiseltest.testableData.peekWithStale", "link" : "chisel3\/tester\/package$$testableData.html#peekWithStale(stale:Boolean):T", "kind" : "def"}, {"label" : "poke", "tail" : "(value: T): Unit", "member" : "chiseltest.testableData.poke", "link" : "chisel3\/tester\/package$$testableData.html#poke(value:T):Unit", "kind" : "def"}, {"label" : "pokeBits", "tail" : "(signal: Data, value: BigInt): Unit", "member" : "chiseltest.testableData.pokeBits", "link" : "chisel3\/tester\/package$$testableData.html#pokeBits(signal:chisel3.Data,value:BigInt):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chisel3\/tester\/package$$testableData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chisel3\/tester\/package$$testableData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chisel3\/tester\/package$$testableData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chisel3\/tester\/package$$testableData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chisel3\/tester\/package$$testableData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chisel3\/tester\/package$$testableData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chisel3\/tester\/package$$testableData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/package$$testableData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/package$$testableData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chisel3\/tester\/package$$testableData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chisel3\/tester\/package$$testableData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chisel3\/tester\/package$$testableData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chisel3\/tester\/package$$testableData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chisel3\/tester\/package$$testableData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chisel3\/tester\/package$$testableData.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chisel3\/tester\/package$$testableData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chisel3\/tester\/package$$testableData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chisel3\/tester\/package$$testableData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chisel3\/tester\/package$$testableData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chisel3\/tester\/package$$testableData.html", "kind" : "class"}]};